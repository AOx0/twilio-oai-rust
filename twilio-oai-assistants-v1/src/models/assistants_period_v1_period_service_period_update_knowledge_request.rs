/*
 * Twilio - Assistants
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AssistantsPeriodV1PeriodServicePeriodUpdateKnowledgeRequest {
    /// The description of the knowledge source.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The details of the knowledge source based on the type.
    #[serde(rename = "knowledge_source_details", skip_serializing_if = "Option::is_none")]
    pub knowledge_source_details: Option<serde_json::Value>,
    /// The name of the knowledge source.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "policy", skip_serializing_if = "Option::is_none")]
    pub policy: Option<Box<models::AssistantsPeriodV1PeriodServicePeriodCreatePolicyRequest>>,
    /// The description of the knowledge source.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// The embedding model to be used for the knowledge source. It's only applicable to 'Database' type.
    #[serde(rename = "embedding_model", skip_serializing_if = "Option::is_none")]
    pub embedding_model: Option<String>,
}

impl AssistantsPeriodV1PeriodServicePeriodUpdateKnowledgeRequest {
    pub fn new() -> AssistantsPeriodV1PeriodServicePeriodUpdateKnowledgeRequest {
        AssistantsPeriodV1PeriodServicePeriodUpdateKnowledgeRequest {
            description: None,
            knowledge_source_details: None,
            name: None,
            policy: None,
            r#type: None,
            embedding_model: None,
        }
    }
}

