/*
 * Twilio - Assistants
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AssistantsPeriodV1PeriodServicePeriodAssistantWithToolsAndKnowledge {
    /// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Assistant resource.
    #[serde(rename = "account_sid")]
    pub account_sid: String,
    /// The Personalization and Perception Engine settings.
    #[serde(rename = "customer_ai")]
    pub customer_ai: serde_json::Value,
    /// The Assistant ID.
    #[serde(rename = "id")]
    pub id: String,
    /// The default model used by the assistant.
    #[serde(rename = "model")]
    pub model: String,
    /// The name of the assistant.
    #[serde(rename = "name")]
    pub name: String,
    /// The owner/company of the assistant.
    #[serde(rename = "owner")]
    pub owner: String,
    /// The url of the assistant resource.
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// The personality prompt to be used for assistant.
    #[serde(rename = "personality_prompt")]
    pub personality_prompt: String,
    /// The date and time in GMT when the Assistant was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
    #[serde(rename = "date_created")]
    pub date_created: String,
    /// The date and time in GMT when the Assistant was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
    #[serde(rename = "date_updated")]
    pub date_updated: String,
    /// The list of knowledge sources associated with the assistant.
    #[serde(rename = "knowledge")]
    pub knowledge: Vec<models::AssistantsPeriodV1PeriodServicePeriodKnowledge>,
    /// The list of tools associated with the assistant.
    #[serde(rename = "tools")]
    pub tools: Vec<models::AssistantsPeriodV1PeriodServicePeriodTool>,
}

impl AssistantsPeriodV1PeriodServicePeriodAssistantWithToolsAndKnowledge {
    pub fn new(account_sid: String, customer_ai: serde_json::Value, id: String, model: String, name: String, owner: String, personality_prompt: String, date_created: String, date_updated: String, knowledge: Vec<models::AssistantsPeriodV1PeriodServicePeriodKnowledge>, tools: Vec<models::AssistantsPeriodV1PeriodServicePeriodTool>) -> AssistantsPeriodV1PeriodServicePeriodAssistantWithToolsAndKnowledge {
        AssistantsPeriodV1PeriodServicePeriodAssistantWithToolsAndKnowledge {
            account_sid,
            customer_ai,
            id,
            model,
            name,
            owner,
            url: None,
            personality_prompt,
            date_created,
            date_updated,
            knowledge,
            tools,
        }
    }
}

