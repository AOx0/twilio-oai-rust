/*
 * Twilio - Assistants
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AssistantsPeriodV1PeriodServicePeriodCreateKnowledgeRequest {
    /// The Assistant ID.
    #[serde(rename = "assistant_id", skip_serializing_if = "Option::is_none")]
    pub assistant_id: Option<String>,
    /// The description of the knowledge source.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The details of the knowledge source based on the type.
    #[serde(rename = "knowledge_source_details", skip_serializing_if = "Option::is_none")]
    pub knowledge_source_details: Option<serde_json::Value>,
    /// The name of the tool.
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "policy", skip_serializing_if = "Option::is_none")]
    pub policy: Option<Box<models::AssistantsPeriodV1PeriodServicePeriodCreatePolicyRequest>>,
    /// The type of the knowledge source.
    #[serde(rename = "type")]
    pub r#type: String,
    /// The embedding model to be used for the knowledge source. It's required for 'Database' type but disallowed for other types.
    #[serde(rename = "embedding_model", skip_serializing_if = "Option::is_none")]
    pub embedding_model: Option<String>,
}

impl AssistantsPeriodV1PeriodServicePeriodCreateKnowledgeRequest {
    pub fn new(name: String, r#type: String) -> AssistantsPeriodV1PeriodServicePeriodCreateKnowledgeRequest {
        AssistantsPeriodV1PeriodServicePeriodCreateKnowledgeRequest {
            assistant_id: None,
            description: None,
            knowledge_source_details: None,
            name,
            policy: None,
            r#type,
            embedding_model: None,
        }
    }
}

