/*
 * Twilio - Api
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// UsageRecordTodayEnumCategory : The category of usage. For more information, see [Usage Categories](https://www.twilio.com/docs/usage/api/usage-record#usage-categories).
/// The category of usage. For more information, see [Usage Categories](https://www.twilio.com/docs/usage/api/usage-record#usage-categories).
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum UsageRecordTodayEnumCategory {
    #[serde(rename = "a2p-10dlc-registrationfees-brandregistration")]
    A2p10dlcRegistrationfeesBrandregistration,
    #[serde(rename = "a2p-10dlc-registrationfees-bv")]
    A2p10dlcRegistrationfeesBv,
    #[serde(rename = "a2p-10dlc-registrationfees-campaigncharges")]
    A2p10dlcRegistrationfeesCampaigncharges,
    #[serde(rename = "a2p-10dlc-registrationfees-campaignregistration")]
    A2p10dlcRegistrationfeesCampaignregistration,
    #[serde(rename = "a2p-10dlc-registrationfees-campaignvetting")]
    A2p10dlcRegistrationfeesCampaignvetting,
    #[serde(rename = "a2p-10dlc-registrationfees-monthly")]
    A2p10dlcRegistrationfeesMonthly,
    #[serde(rename = "a2p-10dlc-registrationfees-onetime")]
    A2p10dlcRegistrationfeesOnetime,
    #[serde(rename = "a2p-registration-fees")]
    A2pRegistrationFees,
    #[serde(rename = "account-security")]
    AccountSecurity,
    #[serde(rename = "agent-conference")]
    AgentConference,
    #[serde(rename = "agent-copilot")]
    AgentCopilot,
    #[serde(rename = "agent-copilot-messages")]
    AgentCopilotMessages,
    #[serde(rename = "agent-copilot-participant-minutes")]
    AgentCopilotParticipantMinutes,
    #[serde(rename = "ai-assistants")]
    AiAssistants,
    #[serde(rename = "ai-assistants-voice")]
    AiAssistantsVoice,
    #[serde(rename = "amazon-polly")]
    AmazonPolly,
    #[serde(rename = "answering-machine-detection")]
    AnsweringMachineDetection,
    #[serde(rename = "assets")]
    Assets,
    #[serde(rename = "audience-minutes")]
    AudienceMinutes,
    #[serde(rename = "audience-minutes-audio")]
    AudienceMinutesAudio,
    #[serde(rename = "authy-authentications")]
    AuthyAuthentications,
    #[serde(rename = "authy-calls-outbound")]
    AuthyCallsOutbound,
    #[serde(rename = "authy-email-authentications")]
    AuthyEmailAuthentications,
    #[serde(rename = "authy-monthly-fees")]
    AuthyMonthlyFees,
    #[serde(rename = "authy-outbound-email")]
    AuthyOutboundEmail,
    #[serde(rename = "authy-phone-intelligence")]
    AuthyPhoneIntelligence,
    #[serde(rename = "authy-phone-verifications")]
    AuthyPhoneVerifications,
    #[serde(rename = "authy-sms-outbound")]
    AuthySmsOutbound,
    #[serde(rename = "authy-verify-email-verifications")]
    AuthyVerifyEmailVerifications,
    #[serde(rename = "authy-verify-outbound-email")]
    AuthyVerifyOutboundEmail,
    #[serde(rename = "autopilot")]
    Autopilot,
    #[serde(rename = "autopilot-home-assistants")]
    AutopilotHomeAssistants,
    #[serde(rename = "autopilot-messaging")]
    AutopilotMessaging,
    #[serde(rename = "autopilot-other")]
    AutopilotOther,
    #[serde(rename = "autopilot-voice")]
    AutopilotVoice,
    #[serde(rename = "basic-peer-to-peer-rooms-participant-minutes")]
    BasicPeerToPeerRoomsParticipantMinutes,
    #[serde(rename = "branded-calling")]
    BrandedCalling,
    #[serde(rename = "bundle-sms-bucket")]
    BundleSmsBucket,
    #[serde(rename = "bundle-subscription-fees")]
    BundleSubscriptionFees,
    #[serde(rename = "call-forwarding-lookups")]
    CallForwardingLookups,
    #[serde(rename = "call-progess-events")]
    CallProgessEvents,
    #[serde(rename = "calleridlookups")]
    Calleridlookups,
    #[serde(rename = "calls")]
    Calls,
    #[serde(rename = "calls-client")]
    CallsClient,
    #[serde(rename = "calls-emergency")]
    CallsEmergency,
    #[serde(rename = "calls-globalconference")]
    CallsGlobalconference,
    #[serde(rename = "calls-inbound")]
    CallsInbound,
    #[serde(rename = "calls-inbound-local")]
    CallsInboundLocal,
    #[serde(rename = "calls-inbound-mobile")]
    CallsInboundMobile,
    #[serde(rename = "calls-inbound-tollfree")]
    CallsInboundTollfree,
    #[serde(rename = "calls-inbound-tollfree-local")]
    CallsInboundTollfreeLocal,
    #[serde(rename = "calls-inbound-tollfree-mobile")]
    CallsInboundTollfreeMobile,
    #[serde(rename = "calls-media-stream-minutes")]
    CallsMediaStreamMinutes,
    #[serde(rename = "calls-outbound")]
    CallsOutbound,
    #[serde(rename = "calls-pay-verb-transactions")]
    CallsPayVerbTransactions,
    #[serde(rename = "calls-recordings")]
    CallsRecordings,
    #[serde(rename = "calls-sip")]
    CallsSip,
    #[serde(rename = "calls-sip-inbound")]
    CallsSipInbound,
    #[serde(rename = "calls-sip-outbound")]
    CallsSipOutbound,
    #[serde(rename = "calls-text-to-speech")]
    CallsTextToSpeech,
    #[serde(rename = "calls-transfers")]
    CallsTransfers,
    #[serde(rename = "carrier-lookups")]
    CarrierLookups,
    #[serde(rename = "category")]
    Category,
    #[serde(rename = "channels")]
    Channels,
    #[serde(rename = "channels-messaging")]
    ChannelsMessaging,
    #[serde(rename = "channels-messaging-inbound")]
    ChannelsMessagingInbound,
    #[serde(rename = "channels-messaging-outbound")]
    ChannelsMessagingOutbound,
    #[serde(rename = "channels-whatsapp")]
    ChannelsWhatsapp,
    #[serde(rename = "channels-whatsapp-conversation-authentication")]
    ChannelsWhatsappConversationAuthentication,
    #[serde(rename = "channels-whatsapp-conversation-free")]
    ChannelsWhatsappConversationFree,
    #[serde(rename = "channels-whatsapp-conversation-marketing")]
    ChannelsWhatsappConversationMarketing,
    #[serde(rename = "channels-whatsapp-conversation-service")]
    ChannelsWhatsappConversationService,
    #[serde(rename = "channels-whatsapp-conversation-utility")]
    ChannelsWhatsappConversationUtility,
    #[serde(rename = "channels-whatsapp-inbound")]
    ChannelsWhatsappInbound,
    #[serde(rename = "channels-whatsapp-outbound")]
    ChannelsWhatsappOutbound,
    #[serde(rename = "chat-virtual-agent")]
    ChatVirtualAgent,
    #[serde(rename = "conversation-relay")]
    ConversationRelay,
    #[serde(rename = "conversations")]
    Conversations,
    #[serde(rename = "conversations-api-requests")]
    ConversationsApiRequests,
    #[serde(rename = "conversations-conversation-events")]
    ConversationsConversationEvents,
    #[serde(rename = "conversations-endpoint-connectivity")]
    ConversationsEndpointConnectivity,
    #[serde(rename = "conversations-events")]
    ConversationsEvents,
    #[serde(rename = "conversations-participant-events")]
    ConversationsParticipantEvents,
    #[serde(rename = "conversations-participants")]
    ConversationsParticipants,
    #[serde(rename = "cps")]
    Cps,
    #[serde(rename = "credit-transfer")]
    CreditTransfer,
    #[serde(rename = "email")]
    Email,
    #[serde(rename = "emerging-tech")]
    EmergingTech,
    #[serde(rename = "engagement-suite-packaged-plans")]
    EngagementSuitePackagedPlans,
    #[serde(rename = "enhanced-line-type-lookups")]
    EnhancedLineTypeLookups,
    #[serde(rename = "enterprise")]
    Enterprise,
    #[serde(rename = "events")]
    Events,
    #[serde(rename = "experiment-france-sms")]
    ExperimentFranceSms,
    #[serde(rename = "experiment-india-sms")]
    ExperimentIndiaSms,
    #[serde(rename = "experiment-uk-sms")]
    ExperimentUkSms,
    #[serde(rename = "failed-message-processing-fee")]
    FailedMessageProcessingFee,
    #[serde(rename = "flex")]
    Flex,
    #[serde(rename = "flex-active-user-hours")]
    FlexActiveUserHours,
    #[serde(rename = "flex-concurrent-users")]
    FlexConcurrentUsers,
    #[serde(rename = "flex-conversational-insights")]
    FlexConversationalInsights,
    #[serde(rename = "flex-conversational-insights-messages")]
    FlexConversationalInsightsMessages,
    #[serde(rename = "flex-conversational-insights-voice-minutes")]
    FlexConversationalInsightsVoiceMinutes,
    #[serde(rename = "flex-email-usage")]
    FlexEmailUsage,
    #[serde(rename = "flex-messaging-usage")]
    FlexMessagingUsage,
    #[serde(rename = "flex-partner-spinsci")]
    FlexPartnerSpinsci,
    #[serde(rename = "flex-partner-xcelerate")]
    FlexPartnerXcelerate,
    #[serde(rename = "flex-reseller-ecosystem")]
    FlexResellerEcosystem,
    #[serde(rename = "flex-unique-user")]
    FlexUniqueUser,
    #[serde(rename = "flex-usage")]
    FlexUsage,
    #[serde(rename = "flex-users")]
    FlexUsers,
    #[serde(rename = "flex-voice-minute")]
    FlexVoiceMinute,
    #[serde(rename = "flex-ytica")]
    FlexYtica,
    #[serde(rename = "fraud-lookups")]
    FraudLookups,
    #[serde(rename = "frontline")]
    Frontline,
    #[serde(rename = "frontline-users")]
    FrontlineUsers,
    #[serde(rename = "functions")]
    Functions,
    #[serde(rename = "generic-pay-transactions")]
    GenericPayTransactions,
    #[serde(rename = "group-rooms")]
    GroupRooms,
    #[serde(rename = "group-rooms-data-track")]
    GroupRoomsDataTrack,
    #[serde(rename = "group-rooms-encrypted-media-recorded")]
    GroupRoomsEncryptedMediaRecorded,
    #[serde(rename = "group-rooms-media-downloaded")]
    GroupRoomsMediaDownloaded,
    #[serde(rename = "group-rooms-media-recorded")]
    GroupRoomsMediaRecorded,
    #[serde(rename = "group-rooms-media-routed")]
    GroupRoomsMediaRouted,
    #[serde(rename = "group-rooms-media-stored")]
    GroupRoomsMediaStored,
    #[serde(rename = "group-rooms-participant-minutes")]
    GroupRoomsParticipantMinutes,
    #[serde(rename = "group-rooms-recorded-minutes")]
    GroupRoomsRecordedMinutes,
    #[serde(rename = "ip-messaging")]
    IpMessaging,
    #[serde(rename = "ip-messaging-commands")]
    IpMessagingCommands,
    #[serde(rename = "ip-messaging-data-storage")]
    IpMessagingDataStorage,
    #[serde(rename = "ip-messaging-data-transfer")]
    IpMessagingDataTransfer,
    #[serde(rename = "ip-messaging-endpoint-connectivity")]
    IpMessagingEndpointConnectivity,
    #[serde(rename = "ivr-virtual-agent-custom-voices")]
    IvrVirtualAgentCustomVoices,
    #[serde(rename = "ivr-virtual-agent-genai")]
    IvrVirtualAgentGenai,
    #[serde(rename = "line-status-lookups")]
    LineStatusLookups,
    #[serde(rename = "live-activity-lookups")]
    LiveActivityLookups,
    #[serde(rename = "lookup-bucket-adjustment")]
    LookupBucketAdjustment,
    #[serde(rename = "lookup-identity-match")]
    LookupIdentityMatch,
    #[serde(rename = "lookups")]
    Lookups,
    #[serde(rename = "marketplace")]
    Marketplace,
    #[serde(rename = "marketplace-algorithmia-named-entity-recognition")]
    MarketplaceAlgorithmiaNamedEntityRecognition,
    #[serde(rename = "marketplace-cadence-transcription")]
    MarketplaceCadenceTranscription,
    #[serde(rename = "marketplace-cadence-translation")]
    MarketplaceCadenceTranslation,
    #[serde(rename = "marketplace-capio-speech-to-text")]
    MarketplaceCapioSpeechToText,
    #[serde(rename = "marketplace-convriza-ababa")]
    MarketplaceConvrizaAbaba,
    #[serde(rename = "marketplace-deepgram-phrase-detector")]
    MarketplaceDeepgramPhraseDetector,
    #[serde(rename = "marketplace-deepgram-transcription")]
    MarketplaceDeepgramTranscription,
    #[serde(rename = "marketplace-deepgram-transcription-base")]
    MarketplaceDeepgramTranscriptionBase,
    #[serde(rename = "marketplace-deepgram-transscription-enhanced")]
    MarketplaceDeepgramTransscriptionEnhanced,
    #[serde(rename = "marketplace-digital-segment-business-info")]
    MarketplaceDigitalSegmentBusinessInfo,
    #[serde(rename = "marketplace-facebook-offline-conversions")]
    MarketplaceFacebookOfflineConversions,
    #[serde(rename = "marketplace-google-speech-to-text")]
    MarketplaceGoogleSpeechToText,
    #[serde(rename = "marketplace-ibm-watson-message-insights")]
    MarketplaceIbmWatsonMessageInsights,
    #[serde(rename = "marketplace-ibm-watson-message-sentiment")]
    MarketplaceIbmWatsonMessageSentiment,
    #[serde(rename = "marketplace-ibm-watson-recording-analysis")]
    MarketplaceIbmWatsonRecordingAnalysis,
    #[serde(rename = "marketplace-ibm-watson-tone-analyzer")]
    MarketplaceIbmWatsonToneAnalyzer,
    #[serde(rename = "marketplace-icehook-systems-scout")]
    MarketplaceIcehookSystemsScout,
    #[serde(rename = "marketplace-infogroup-dataaxle-bizinfo")]
    MarketplaceInfogroupDataaxleBizinfo,
    #[serde(rename = "marketplace-keen-io-contact-center-analytics")]
    MarketplaceKeenIoContactCenterAnalytics,
    #[serde(rename = "marketplace-marchex-cleancall")]
    MarketplaceMarchexCleancall,
    #[serde(rename = "marketplace-marchex-recording-analysis")]
    MarketplaceMarchexRecordingAnalysis,
    #[serde(rename = "marketplace-marchex-sentiment-analysis-for-sms")]
    MarketplaceMarchexSentimentAnalysisForSms,
    #[serde(rename = "marketplace-marketplace-nextcaller-social-id")]
    MarketplaceMarketplaceNextcallerSocialId,
    #[serde(rename = "marketplace-mobile-commons-opt-out-classifier")]
    MarketplaceMobileCommonsOptOutClassifier,
    #[serde(rename = "marketplace-nexiwave-voicemail-to-text")]
    MarketplaceNexiwaveVoicemailToText,
    #[serde(rename = "marketplace-nextcaller-advanced-caller-identification")]
    MarketplaceNextcallerAdvancedCallerIdentification,
    #[serde(rename = "marketplace-nomorobo-spam-score")]
    MarketplaceNomoroboSpamScore,
    #[serde(rename = "marketplace-pay-addons")]
    MarketplacePayAddons,
    #[serde(rename = "marketplace-pay-addons-basecommerce-pay-connector")]
    MarketplacePayAddonsBasecommercePayConnector,
    #[serde(rename = "marketplace-pay-addons-braintree-pay-connector")]
    MarketplacePayAddonsBraintreePayConnector,
    #[serde(rename = "marketplace-pay-addons-cardconnect-pay-connector")]
    MarketplacePayAddonsCardconnectPayConnector,
    #[serde(rename = "marketplace-pay-addons-chase-pay-connector")]
    MarketplacePayAddonsChasePayConnector,
    #[serde(rename = "marketplace-pay-addons-shuttle-pay-connector")]
    MarketplacePayAddonsShuttlePayConnector,
    #[serde(rename = "marketplace-pay-addons-stripe-pay-connector")]
    MarketplacePayAddonsStripePayConnector,
    #[serde(rename = "marketplace-payfone-tcpa-compliance")]
    MarketplacePayfoneTcpaCompliance,
    #[serde(rename = "marketplace-poly-ai-connector")]
    MarketplacePolyAiConnector,
    #[serde(rename = "marketplace-realphonevalidation")]
    MarketplaceRealphonevalidation,
    #[serde(rename = "marketplace-remeeting-automatic-speech-recognition")]
    MarketplaceRemeetingAutomaticSpeechRecognition,
    #[serde(rename = "marketplace-spoke-phone-license-pro")]
    MarketplaceSpokePhoneLicensePro,
    #[serde(rename = "marketplace-spoke-phone-license-standard")]
    MarketplaceSpokePhoneLicenseStandard,
    #[serde(rename = "marketplace-tcpa-defense-solutions-blacklist-feed")]
    MarketplaceTcpaDefenseSolutionsBlacklistFeed,
    #[serde(rename = "marketplace-telo-opencnam")]
    MarketplaceTeloOpencnam,
    #[serde(rename = "marketplace-trestle-solutions-caller-identification")]
    MarketplaceTrestleSolutionsCallerIdentification,
    #[serde(rename = "marketplace-truecnam-true-spam")]
    MarketplaceTruecnamTrueSpam,
    #[serde(rename = "marketplace-twilio-caller-name-lookup-us")]
    MarketplaceTwilioCallerNameLookupUs,
    #[serde(rename = "marketplace-twilio-carrier-information-lookup")]
    MarketplaceTwilioCarrierInformationLookup,
    #[serde(rename = "marketplace-voicebase-pci")]
    MarketplaceVoicebasePci,
    #[serde(rename = "marketplace-voicebase-transcription")]
    MarketplaceVoicebaseTranscription,
    #[serde(rename = "marketplace-voicebase-transcription-custom-vocabulary")]
    MarketplaceVoicebaseTranscriptionCustomVocabulary,
    #[serde(rename = "marketplace-web-purify-profanity-filter")]
    MarketplaceWebPurifyProfanityFilter,
    #[serde(rename = "marketplace-whitepages-pro-caller-identification")]
    MarketplaceWhitepagesProCallerIdentification,
    #[serde(rename = "marketplace-whitepages-pro-phone-intelligence")]
    MarketplaceWhitepagesProPhoneIntelligence,
    #[serde(rename = "marketplace-whitepages-pro-phone-reputation")]
    MarketplaceWhitepagesProPhoneReputation,
    #[serde(rename = "marketplace-wolfarm-spoken-results")]
    MarketplaceWolfarmSpokenResults,
    #[serde(rename = "marketplace-wolfram-short-answer")]
    MarketplaceWolframShortAnswer,
    #[serde(rename = "marketplace-ytica-contact-center-reporting-analytics")]
    MarketplaceYticaContactCenterReportingAnalytics,
    #[serde(rename = "marketplay-pay-addons-shuttle-pay-connector")]
    MarketplayPayAddonsShuttlePayConnector,
    #[serde(rename = "media-composer-minutes")]
    MediaComposerMinutes,
    #[serde(rename = "mediastorage")]
    Mediastorage,
    #[serde(rename = "min-spend-adjustments")]
    MinSpendAdjustments,
    #[serde(rename = "mms")]
    Mms,
    #[serde(rename = "mms-inbound")]
    MmsInbound,
    #[serde(rename = "mms-inbound-longcode")]
    MmsInboundLongcode,
    #[serde(rename = "mms-inbound-shortcode")]
    MmsInboundShortcode,
    #[serde(rename = "mms-inbound-toll-free")]
    MmsInboundTollFree,
    #[serde(rename = "mms-messages-carrierfees")]
    MmsMessagesCarrierfees,
    #[serde(rename = "mms-outbound")]
    MmsOutbound,
    #[serde(rename = "mms-outbound-longcode")]
    MmsOutboundLongcode,
    #[serde(rename = "mms-outbound-shortcode")]
    MmsOutboundShortcode,
    #[serde(rename = "mms-outbound-tollfree")]
    MmsOutboundTollfree,
    #[serde(rename = "monitor")]
    Monitor,
    #[serde(rename = "monitor-reads")]
    MonitorReads,
    #[serde(rename = "monitor-storage")]
    MonitorStorage,
    #[serde(rename = "monitor-writes")]
    MonitorWrites,
    #[serde(rename = "notify")]
    Notify,
    #[serde(rename = "notify-actions-attempts")]
    NotifyActionsAttempts,
    #[serde(rename = "notify-channels")]
    NotifyChannels,
    #[serde(rename = "number-format-lookups")]
    NumberFormatLookups,
    #[serde(rename = "pchat")]
    Pchat,
    #[serde(rename = "pchat-actions")]
    PchatActions,
    #[serde(rename = "pchat-aps")]
    PchatAps,
    #[serde(rename = "pchat-conv-med-storage")]
    PchatConvMedStorage,
    #[serde(rename = "pchat-messages")]
    PchatMessages,
    #[serde(rename = "pchat-notifications")]
    PchatNotifications,
    #[serde(rename = "pchat-reads")]
    PchatReads,
    #[serde(rename = "pchat-users")]
    PchatUsers,
    #[serde(rename = "peer-to-peer-rooms-participant-minutes")]
    PeerToPeerRoomsParticipantMinutes,
    #[serde(rename = "pfax")]
    Pfax,
    #[serde(rename = "pfax-minutes")]
    PfaxMinutes,
    #[serde(rename = "pfax-minutes-inbound")]
    PfaxMinutesInbound,
    #[serde(rename = "pfax-minutes-outbound")]
    PfaxMinutesOutbound,
    #[serde(rename = "pfax-pages")]
    PfaxPages,
    #[serde(rename = "phone-quality-score-lookups")]
    PhoneQualityScoreLookups,
    #[serde(rename = "phonenumbers")]
    Phonenumbers,
    #[serde(rename = "phonenumbers-cps")]
    PhonenumbersCps,
    #[serde(rename = "phonenumbers-emergency")]
    PhonenumbersEmergency,
    #[serde(rename = "phonenumbers-local")]
    PhonenumbersLocal,
    #[serde(rename = "phonenumbers-mobile")]
    PhonenumbersMobile,
    #[serde(rename = "phonenumbers-porting")]
    PhonenumbersPorting,
    #[serde(rename = "phonenumbers-setups")]
    PhonenumbersSetups,
    #[serde(rename = "phonenumbers-tollfree")]
    PhonenumbersTollfree,
    #[serde(rename = "premiumsupport")]
    Premiumsupport,
    #[serde(rename = "premiumsupport-percentage-spend")]
    PremiumsupportPercentageSpend,
    #[serde(rename = "programmablevoice-platform")]
    ProgrammablevoicePlatform,
    #[serde(rename = "programmablevoiceconn-clientsdk")]
    ProgrammablevoiceconnClientsdk,
    #[serde(rename = "programmablevoiceconn-clientsdk-inbound")]
    ProgrammablevoiceconnClientsdkInbound,
    #[serde(rename = "programmablevoiceconn-clientsdk-outbound")]
    ProgrammablevoiceconnClientsdkOutbound,
    #[serde(rename = "programmablevoiceconn-onnet")]
    ProgrammablevoiceconnOnnet,
    #[serde(rename = "programmablevoiceconn-onnet-inbound")]
    ProgrammablevoiceconnOnnetInbound,
    #[serde(rename = "programmablevoiceconn-onnet-outbound")]
    ProgrammablevoiceconnOnnetOutbound,
    #[serde(rename = "programmablevoiceconn-sip")]
    ProgrammablevoiceconnSip,
    #[serde(rename = "programmablevoiceconn-sip-inbound")]
    ProgrammablevoiceconnSipInbound,
    #[serde(rename = "programmablevoiceconn-sip-outbound")]
    ProgrammablevoiceconnSipOutbound,
    #[serde(rename = "programmablevoiceconnectivity")]
    Programmablevoiceconnectivity,
    #[serde(rename = "proxy")]
    Proxy,
    #[serde(rename = "proxy-active-sessions")]
    ProxyActiveSessions,
    #[serde(rename = "proxy-bucket-adjustment")]
    ProxyBucketAdjustment,
    #[serde(rename = "proxy-licenses")]
    ProxyLicenses,
    #[serde(rename = "pstnconnectivity")]
    Pstnconnectivity,
    #[serde(rename = "pstnconnectivity-inbound")]
    PstnconnectivityInbound,
    #[serde(rename = "pstnconnectivity-outbound")]
    PstnconnectivityOutbound,
    #[serde(rename = "pv")]
    Pv,
    #[serde(rename = "pv-basic-rooms")]
    PvBasicRooms,
    #[serde(rename = "pv-composition-media-downloaded")]
    PvCompositionMediaDownloaded,
    #[serde(rename = "pv-composition-media-encrypted")]
    PvCompositionMediaEncrypted,
    #[serde(rename = "pv-composition-media-stored")]
    PvCompositionMediaStored,
    #[serde(rename = "pv-composition-minutes")]
    PvCompositionMinutes,
    #[serde(rename = "pv-recording-compositions")]
    PvRecordingCompositions,
    #[serde(rename = "pv-room-participants")]
    PvRoomParticipants,
    #[serde(rename = "pv-room-participants-au1")]
    PvRoomParticipantsAu1,
    #[serde(rename = "pv-room-participants-br1")]
    PvRoomParticipantsBr1,
    #[serde(rename = "pv-room-participants-ie1")]
    PvRoomParticipantsIe1,
    #[serde(rename = "pv-room-participants-jp1")]
    PvRoomParticipantsJp1,
    #[serde(rename = "pv-room-participants-sg1")]
    PvRoomParticipantsSg1,
    #[serde(rename = "pv-room-participants-us1")]
    PvRoomParticipantsUs1,
    #[serde(rename = "pv-room-participants-us2")]
    PvRoomParticipantsUs2,
    #[serde(rename = "pv-rooms")]
    PvRooms,
    #[serde(rename = "pv-sip-endpoint-registrations")]
    PvSipEndpointRegistrations,
    #[serde(rename = "rcs-messages")]
    RcsMessages,
    #[serde(rename = "reassigned-number")]
    ReassignedNumber,
    #[serde(rename = "recordings")]
    Recordings,
    #[serde(rename = "recordingstorage")]
    Recordingstorage,
    #[serde(rename = "shortcodes")]
    Shortcodes,
    #[serde(rename = "shortcodes-customerowned")]
    ShortcodesCustomerowned,
    #[serde(rename = "shortcodes-mms-enablement")]
    ShortcodesMmsEnablement,
    #[serde(rename = "shortcodes-mps")]
    ShortcodesMps,
    #[serde(rename = "shortcodes-random")]
    ShortcodesRandom,
    #[serde(rename = "shortcodes-setup-fees")]
    ShortcodesSetupFees,
    #[serde(rename = "shortcodes-uk")]
    ShortcodesUk,
    #[serde(rename = "shortcodes-vanity")]
    ShortcodesVanity,
    #[serde(rename = "sim-swap-lookups")]
    SimSwapLookups,
    #[serde(rename = "sip-secure-media")]
    SipSecureMedia,
    #[serde(rename = "small-group-rooms")]
    SmallGroupRooms,
    #[serde(rename = "small-group-rooms-data-track")]
    SmallGroupRoomsDataTrack,
    #[serde(rename = "small-group-rooms-participant-minutes")]
    SmallGroupRoomsParticipantMinutes,
    #[serde(rename = "sms")]
    Sms,
    #[serde(rename = "sms-inbound")]
    SmsInbound,
    #[serde(rename = "sms-inbound-longcode")]
    SmsInboundLongcode,
    #[serde(rename = "sms-inbound-shortcode")]
    SmsInboundShortcode,
    #[serde(rename = "sms-inbound-tollfree")]
    SmsInboundTollfree,
    #[serde(rename = "sms-messages-carrierfees")]
    SmsMessagesCarrierfees,
    #[serde(rename = "sms-messages-features")]
    SmsMessagesFeatures,
    #[serde(rename = "sms-messages-features-engagement-suite")]
    SmsMessagesFeaturesEngagementSuite,
    #[serde(rename = "sms-messages-features-message-redaction")]
    SmsMessagesFeaturesMessageRedaction,
    #[serde(rename = "sms-messages-features-senderid")]
    SmsMessagesFeaturesSenderid,
    #[serde(rename = "sms-mps")]
    SmsMps,
    #[serde(rename = "sms-mps-shortcode")]
    SmsMpsShortcode,
    #[serde(rename = "sms-mps-tollfree")]
    SmsMpsTollfree,
    #[serde(rename = "sms-mps-tollfree-setup")]
    SmsMpsTollfreeSetup,
    #[serde(rename = "sms-national-regulatory-protection")]
    SmsNationalRegulatoryProtection,
    #[serde(rename = "sms-outbound")]
    SmsOutbound,
    #[serde(rename = "sms-outbound-content-inspection")]
    SmsOutboundContentInspection,
    #[serde(rename = "sms-outbound-longcode")]
    SmsOutboundLongcode,
    #[serde(rename = "sms-outbound-shortcode")]
    SmsOutboundShortcode,
    #[serde(rename = "sms-outbound-tollfree")]
    SmsOutboundTollfree,
    #[serde(rename = "sms-pumping-protection")]
    SmsPumpingProtection,
    #[serde(rename = "sms-pumping-risk")]
    SmsPumpingRisk,
    #[serde(rename = "smsmessages-bucket-adjustments")]
    SmsmessagesBucketAdjustments,
    #[serde(rename = "smsmessages-outbound-domestic")]
    SmsmessagesOutboundDomestic,
    #[serde(rename = "speech-recognition")]
    SpeechRecognition,
    #[serde(rename = "studio-engagements")]
    StudioEngagements,
    #[serde(rename = "sync")]
    Sync,
    #[serde(rename = "sync-actions")]
    SyncActions,
    #[serde(rename = "sync-endpoint-hours")]
    SyncEndpointHours,
    #[serde(rename = "sync-endpoint-hours-above-daily-cap")]
    SyncEndpointHoursAboveDailyCap,
    #[serde(rename = "taskrouter-tasks")]
    TaskrouterTasks,
    #[serde(rename = "totalprice")]
    Totalprice,
    #[serde(rename = "transcriptions")]
    Transcriptions,
    #[serde(rename = "trunking-cps")]
    TrunkingCps,
    #[serde(rename = "trunking-emergency-calls")]
    TrunkingEmergencyCalls,
    #[serde(rename = "trunking-origination")]
    TrunkingOrigination,
    #[serde(rename = "trunking-origination-local")]
    TrunkingOriginationLocal,
    #[serde(rename = "trunking-origination-mobile")]
    TrunkingOriginationMobile,
    #[serde(rename = "trunking-origination-tollfree")]
    TrunkingOriginationTollfree,
    #[serde(rename = "trunking-recordings")]
    TrunkingRecordings,
    #[serde(rename = "trunking-secure")]
    TrunkingSecure,
    #[serde(rename = "trunking-termination")]
    TrunkingTermination,
    #[serde(rename = "tts-google")]
    TtsGoogle,
    #[serde(rename = "turnmegabytes")]
    Turnmegabytes,
    #[serde(rename = "turnmegabytes-australia")]
    TurnmegabytesAustralia,
    #[serde(rename = "turnmegabytes-brasil")]
    TurnmegabytesBrasil,
    #[serde(rename = "turnmegabytes-germany")]
    TurnmegabytesGermany,
    #[serde(rename = "turnmegabytes-india")]
    TurnmegabytesIndia,
    #[serde(rename = "turnmegabytes-ireland")]
    TurnmegabytesIreland,
    #[serde(rename = "turnmegabytes-japan")]
    TurnmegabytesJapan,
    #[serde(rename = "turnmegabytes-singapore")]
    TurnmegabytesSingapore,
    #[serde(rename = "turnmegabytes-useast")]
    TurnmegabytesUseast,
    #[serde(rename = "turnmegabytes-uswest")]
    TurnmegabytesUswest,
    #[serde(rename = "twilio-for-salesforce")]
    TwilioForSalesforce,
    #[serde(rename = "twilio-for-salesforce-licenses")]
    TwilioForSalesforceLicenses,
    #[serde(rename = "twilio-interconnect")]
    TwilioInterconnect,
    #[serde(rename = "twiml")]
    Twiml,
    #[serde(rename = "usage-flex-video")]
    UsageFlexVideo,
    #[serde(rename = "usage-functions")]
    UsageFunctions,
    #[serde(rename = "usage-rcs-basic-messages-outbound")]
    UsageRcsBasicMessagesOutbound,
    #[serde(rename = "usage-rcs-messages")]
    UsageRcsMessages,
    #[serde(rename = "usage-rcs-messages-inbound")]
    UsageRcsMessagesInbound,
    #[serde(rename = "usage-rcs-messaging-carrier-fees")]
    UsageRcsMessagingCarrierFees,
    #[serde(rename = "usage-rcs-single-messages-outbound")]
    UsageRcsSingleMessagesOutbound,
    #[serde(rename = "verify-package-plans")]
    VerifyPackagePlans,
    #[serde(rename = "verify-push")]
    VerifyPush,
    #[serde(rename = "verify-sna")]
    VerifySna,
    #[serde(rename = "verify-totp")]
    VerifyTotp,
    #[serde(rename = "verify-voice-sms")]
    VerifyVoiceSms,
    #[serde(rename = "verify-whatsapp-conversations-business-initiated")]
    VerifyWhatsappConversationsBusinessInitiated,
    #[serde(rename = "video-recordings")]
    VideoRecordings,
    #[serde(rename = "video-rooms-turn-megabytes")]
    VideoRoomsTurnMegabytes,
    #[serde(rename = "virtual-agent")]
    VirtualAgent,
    #[serde(rename = "voice-insights")]
    VoiceInsights,
    #[serde(rename = "voice-insights-client-insights-on-demand-minute")]
    VoiceInsightsClientInsightsOnDemandMinute,
    #[serde(rename = "voice-insights-ptsn-insights-on-demand-minute")]
    VoiceInsightsPtsnInsightsOnDemandMinute,
    #[serde(rename = "voice-insights-sip-interface-insights-on-demand-minute")]
    VoiceInsightsSipInterfaceInsightsOnDemandMinute,
    #[serde(rename = "voice-insights-sip-trunking-insights-on-demand-minute")]
    VoiceInsightsSipTrunkingInsightsOnDemandMinute,
    #[serde(rename = "voice-intelligence")]
    VoiceIntelligence,
    #[serde(rename = "voice-intelligence-eip-operators")]
    VoiceIntelligenceEipOperators,
    #[serde(rename = "voice-intelligence-operators")]
    VoiceIntelligenceOperators,
    #[serde(rename = "voice-intelligence-transcription")]
    VoiceIntelligenceTranscription,
    #[serde(rename = "wds")]
    Wds,
    #[serde(rename = "wireless")]
    Wireless,
    #[serde(rename = "wireless-data")]
    WirelessData,
    #[serde(rename = "wireless-data-payg")]
    WirelessDataPayg,
    #[serde(rename = "wireless-data-payg-africa")]
    WirelessDataPaygAfrica,
    #[serde(rename = "wireless-data-payg-asia")]
    WirelessDataPaygAsia,
    #[serde(rename = "wireless-data-payg-centralandsouthamerica")]
    WirelessDataPaygCentralandsouthamerica,
    #[serde(rename = "wireless-data-payg-europe")]
    WirelessDataPaygEurope,
    #[serde(rename = "wireless-data-payg-northamerica")]
    WirelessDataPaygNorthamerica,
    #[serde(rename = "wireless-data-payg-oceania")]
    WirelessDataPaygOceania,
    #[serde(rename = "wireless-data-quota1")]
    WirelessDataQuota1,
    #[serde(rename = "wireless-data-quota1-africa")]
    WirelessDataQuota1Africa,
    #[serde(rename = "wireless-data-quota1-asia")]
    WirelessDataQuota1Asia,
    #[serde(rename = "wireless-data-quota1-centralandsouthamerica")]
    WirelessDataQuota1Centralandsouthamerica,
    #[serde(rename = "wireless-data-quota1-europe")]
    WirelessDataQuota1Europe,
    #[serde(rename = "wireless-data-quota1-northamerica")]
    WirelessDataQuota1Northamerica,
    #[serde(rename = "wireless-data-quota1-oceania")]
    WirelessDataQuota1Oceania,
    #[serde(rename = "wireless-data-quota10")]
    WirelessDataQuota10,
    #[serde(rename = "wireless-data-quota10-africa")]
    WirelessDataQuota10Africa,
    #[serde(rename = "wireless-data-quota10-asia")]
    WirelessDataQuota10Asia,
    #[serde(rename = "wireless-data-quota10-centralandsouthamerica")]
    WirelessDataQuota10Centralandsouthamerica,
    #[serde(rename = "wireless-data-quota10-europe")]
    WirelessDataQuota10Europe,
    #[serde(rename = "wireless-data-quota10-northamerica")]
    WirelessDataQuota10Northamerica,
    #[serde(rename = "wireless-data-quota10-oceania")]
    WirelessDataQuota10Oceania,
    #[serde(rename = "wireless-data-quota50")]
    WirelessDataQuota50,
    #[serde(rename = "wireless-data-quota50-africa")]
    WirelessDataQuota50Africa,
    #[serde(rename = "wireless-data-quota50-asia")]
    WirelessDataQuota50Asia,
    #[serde(rename = "wireless-data-quota50-centralandsouthamerica")]
    WirelessDataQuota50Centralandsouthamerica,
    #[serde(rename = "wireless-data-quota50-europe")]
    WirelessDataQuota50Europe,
    #[serde(rename = "wireless-data-quota50-northamerica")]
    WirelessDataQuota50Northamerica,
    #[serde(rename = "wireless-data-quota50-oceania")]
    WirelessDataQuota50Oceania,
    #[serde(rename = "wireless-data-quotacustom")]
    WirelessDataQuotacustom,
    #[serde(rename = "wireless-data-quotacustom-africa")]
    WirelessDataQuotacustomAfrica,
    #[serde(rename = "wireless-data-quotacustom-asia")]
    WirelessDataQuotacustomAsia,
    #[serde(rename = "wireless-data-quotacustom-centralandsouthamerica")]
    WirelessDataQuotacustomCentralandsouthamerica,
    #[serde(rename = "wireless-data-quotacustom-europe")]
    WirelessDataQuotacustomEurope,
    #[serde(rename = "wireless-data-quotacustom-northamerica")]
    WirelessDataQuotacustomNorthamerica,
    #[serde(rename = "wireless-data-quotacustom-oceania")]
    WirelessDataQuotacustomOceania,
    #[serde(rename = "wireless-mrc-payg")]
    WirelessMrcPayg,
    #[serde(rename = "wireless-mrc-quota1")]
    WirelessMrcQuota1,
    #[serde(rename = "wireless-mrc-quota10")]
    WirelessMrcQuota10,
    #[serde(rename = "wireless-mrc-quota50")]
    WirelessMrcQuota50,
    #[serde(rename = "wireless-mrc-quotacustom")]
    WirelessMrcQuotacustom,
    #[serde(rename = "wireless-orders")]
    WirelessOrders,
    #[serde(rename = "wireless-orders-artwork")]
    WirelessOrdersArtwork,
    #[serde(rename = "wireless-orders-bulk")]
    WirelessOrdersBulk,
    #[serde(rename = "wireless-orders-esim")]
    WirelessOrdersEsim,
    #[serde(rename = "wireless-orders-starter")]
    WirelessOrdersStarter,
    #[serde(rename = "wireless-quotas")]
    WirelessQuotas,
    #[serde(rename = "wireless-sms-africa")]
    WirelessSmsAfrica,
    #[serde(rename = "wireless-sms-asia")]
    WirelessSmsAsia,
    #[serde(rename = "wireless-sms-centralandsouthamerica")]
    WirelessSmsCentralandsouthamerica,
    #[serde(rename = "wireless-sms-europe")]
    WirelessSmsEurope,
    #[serde(rename = "wireless-sms-northamerica")]
    WirelessSmsNorthamerica,
    #[serde(rename = "wireless-sms-oceania")]
    WirelessSmsOceania,
    #[serde(rename = "wireless-super-sim")]
    WirelessSuperSim,
    #[serde(rename = "wireless-super-sim-data")]
    WirelessSuperSimData,
    #[serde(rename = "wireless-super-sim-data-north-america-usa")]
    WirelessSuperSimDataNorthAmericaUsa,
    #[serde(rename = "wireless-super-sim-data-payg")]
    WirelessSuperSimDataPayg,
    #[serde(rename = "wireless-super-sim-data-payg-europe")]
    WirelessSuperSimDataPaygEurope,
    #[serde(rename = "wireless-super-sim-data-payg-north-america")]
    WirelessSuperSimDataPaygNorthAmerica,
    #[serde(rename = "wireless-super-sim-hardware")]
    WirelessSuperSimHardware,
    #[serde(rename = "wireless-super-sim-hardware-bulk")]
    WirelessSuperSimHardwareBulk,
    #[serde(rename = "wireless-super-sim-smscommands")]
    WirelessSuperSimSmscommands,
    #[serde(rename = "wireless-super-sim-smscommands-africa")]
    WirelessSuperSimSmscommandsAfrica,
    #[serde(rename = "wireless-super-sim-smscommands-asia")]
    WirelessSuperSimSmscommandsAsia,
    #[serde(rename = "wireless-super-sim-smscommands-cent-and-south-america")]
    WirelessSuperSimSmscommandsCentAndSouthAmerica,
    #[serde(rename = "wireless-super-sim-smscommands-europe")]
    WirelessSuperSimSmscommandsEurope,
    #[serde(rename = "wireless-super-sim-smscommands-north-america")]
    WirelessSuperSimSmscommandsNorthAmerica,
    #[serde(rename = "wireless-super-sim-smscommands-oceania")]
    WirelessSuperSimSmscommandsOceania,
    #[serde(rename = "wireless-super-sim-subscription")]
    WirelessSuperSimSubscription,
    #[serde(rename = "wireless-super-sim-subscription-payg")]
    WirelessSuperSimSubscriptionPayg,
    #[serde(rename = "wireless-usage")]
    WirelessUsage,
    #[serde(rename = "wireless-usage-commands")]
    WirelessUsageCommands,
    #[serde(rename = "wireless-usage-commands-africa")]
    WirelessUsageCommandsAfrica,
    #[serde(rename = "wireless-usage-commands-asia")]
    WirelessUsageCommandsAsia,
    #[serde(rename = "wireless-usage-commands-centralandsouthamerica")]
    WirelessUsageCommandsCentralandsouthamerica,
    #[serde(rename = "wireless-usage-commands-europe")]
    WirelessUsageCommandsEurope,
    #[serde(rename = "wireless-usage-commands-home")]
    WirelessUsageCommandsHome,
    #[serde(rename = "wireless-usage-commands-northamerica")]
    WirelessUsageCommandsNorthamerica,
    #[serde(rename = "wireless-usage-commands-oceania")]
    WirelessUsageCommandsOceania,
    #[serde(rename = "wireless-usage-commands-roaming")]
    WirelessUsageCommandsRoaming,
    #[serde(rename = "wireless-usage-data")]
    WirelessUsageData,
    #[serde(rename = "wireless-usage-data-africa")]
    WirelessUsageDataAfrica,
    #[serde(rename = "wireless-usage-data-asia")]
    WirelessUsageDataAsia,
    #[serde(rename = "wireless-usage-data-centralandsouthamerica")]
    WirelessUsageDataCentralandsouthamerica,
    #[serde(rename = "wireless-usage-data-custom-additionalmb")]
    WirelessUsageDataCustomAdditionalmb,
    #[serde(rename = "wireless-usage-data-custom-first5mb")]
    WirelessUsageDataCustomFirst5mb,
    #[serde(rename = "wireless-usage-data-domestic-roaming")]
    WirelessUsageDataDomesticRoaming,
    #[serde(rename = "wireless-usage-data-europe")]
    WirelessUsageDataEurope,
    #[serde(rename = "wireless-usage-data-individual-additionalgb")]
    WirelessUsageDataIndividualAdditionalgb,
    #[serde(rename = "wireless-usage-data-individual-firstgb")]
    WirelessUsageDataIndividualFirstgb,
    #[serde(rename = "wireless-usage-data-international-roaming-canada")]
    WirelessUsageDataInternationalRoamingCanada,
    #[serde(rename = "wireless-usage-data-international-roaming-india")]
    WirelessUsageDataInternationalRoamingIndia,
    #[serde(rename = "wireless-usage-data-international-roaming-mexico")]
    WirelessUsageDataInternationalRoamingMexico,
    #[serde(rename = "wireless-usage-data-northamerica")]
    WirelessUsageDataNorthamerica,
    #[serde(rename = "wireless-usage-data-oceania")]
    WirelessUsageDataOceania,
    #[serde(rename = "wireless-usage-data-pooled")]
    WirelessUsageDataPooled,
    #[serde(rename = "wireless-usage-data-pooled-downlink")]
    WirelessUsageDataPooledDownlink,
    #[serde(rename = "wireless-usage-data-pooled-uplink")]
    WirelessUsageDataPooledUplink,
    #[serde(rename = "wireless-usage-mrc")]
    WirelessUsageMrc,
    #[serde(rename = "wireless-usage-mrc-custom")]
    WirelessUsageMrcCustom,
    #[serde(rename = "wireless-usage-mrc-individual")]
    WirelessUsageMrcIndividual,
    #[serde(rename = "wireless-usage-mrc-pooled")]
    WirelessUsageMrcPooled,
    #[serde(rename = "wireless-usage-mrc-suspended")]
    WirelessUsageMrcSuspended,
    #[serde(rename = "wireless-usage-sms")]
    WirelessUsageSms,
    #[serde(rename = "wireless-usage-voice")]
    WirelessUsageVoice,
    #[serde(rename = "a2p-fast-track-onboarding")]
    A2pFastTrackOnboarding,
    #[serde(rename = "advisory-services")]
    AdvisoryServices,
    #[serde(rename = "advisory-services-billed")]
    AdvisoryServicesBilled,
    #[serde(rename = "advisory-services-call-tracking")]
    AdvisoryServicesCallTracking,
    #[serde(rename = "advisory-services-data-services")]
    AdvisoryServicesDataServices,
    #[serde(rename = "advisory-services-expenses")]
    AdvisoryServicesExpenses,
    #[serde(rename = "advisory-services-sip-trunking")]
    AdvisoryServicesSipTrunking,
    #[serde(rename = "assets-requests")]
    AssetsRequests,
    #[serde(rename = "audience-minutes-video")]
    AudienceMinutesVideo,
    #[serde(rename = "authy-bucket-adjustment")]
    AuthyBucketAdjustment,
    #[serde(rename = "authy-software")]
    AuthySoftware,
    #[serde(rename = "calleridlookups-api")]
    CalleridlookupsApi,
    #[serde(rename = "calleridlookups-programmablevoice")]
    CalleridlookupsProgrammablevoice,
    #[serde(rename = "calleridlookups-trunking")]
    CalleridlookupsTrunking,
    #[serde(rename = "calls-trunking-inbound-tollfree-local")]
    CallsTrunkingInboundTollfreeLocal,
    #[serde(rename = "calls-trunking-inbound-tollfree-mobile")]
    CallsTrunkingInboundTollfreeMobile,
    #[serde(rename = "channels-whatsapp-conversation-free-1")]
    ChannelsWhatsappConversationFree1,
    #[serde(rename = "conference")]
    Conference,
    #[serde(rename = "conversational-insights")]
    ConversationalInsights,
    #[serde(rename = "conversational-insights-messages")]
    ConversationalInsightsMessages,
    #[serde(rename = "conversational-insights-voice-minutes")]
    ConversationalInsightsVoiceMinutes,
    #[serde(rename = "demo")]
    Demo,
    #[serde(rename = "demo-uc-script-test")]
    DemoUcScriptTest,
    #[serde(rename = "elastic-sip-trunking")]
    ElasticSipTrunking,
    #[serde(rename = "elastic-sip-trunking-call-transfers")]
    ElasticSipTrunkingCallTransfers,
    #[serde(rename = "enterprise-hippa")]
    EnterpriseHippa,
    #[serde(rename = "flex-named-users")]
    FlexNamedUsers,
    #[serde(rename = "flex-spinsci")]
    FlexSpinsci,
    #[serde(rename = "flex-users-1")]
    FlexUsers1,
    #[serde(rename = "flex-wfo-premium-speech-analytics")]
    FlexWfoPremiumSpeechAnalytics,
    #[serde(rename = "flex-xcelerate")]
    FlexXcelerate,
    #[serde(rename = "functions-rollup")]
    FunctionsRollup,
    #[serde(rename = "imp-v1-usage")]
    ImpV1Usage,
    #[serde(rename = "ip-messaging-addons")]
    IpMessagingAddons,
    #[serde(rename = "ivr")]
    Ivr,
    #[serde(rename = "ivr-conversational")]
    IvrConversational,
    #[serde(rename = "ivr-dtmf")]
    IvrDtmf,
    #[serde(rename = "ivr-virtualagent")]
    IvrVirtualagent,
    #[serde(rename = "live")]
    Live,
    #[serde(rename = "live-media-recording-minutes")]
    LiveMediaRecordingMinutes,
    #[serde(rename = "longcode-mps")]
    LongcodeMps,
    #[serde(rename = "marketplace-analytics-addons")]
    MarketplaceAnalyticsAddons,
    #[serde(rename = "marketplace-isv-addons")]
    MarketplaceIsvAddons,
    #[serde(rename = "marketplace-messaging-addons")]
    MarketplaceMessagingAddons,
    #[serde(rename = "marketplace-phonenumbers-addons")]
    MarketplacePhonenumbersAddons,
    #[serde(rename = "marketplace-recording-addons")]
    MarketplaceRecordingAddons,
    #[serde(rename = "marketplace-virtualagent-addons")]
    MarketplaceVirtualagentAddons,
    #[serde(rename = "marketplay-pay-addons-shuttle-pay-connector-1")]
    MarketplayPayAddonsShuttlePayConnector1,
    #[serde(rename = "marketplay-pay-addons-stripe-pay-connector")]
    MarketplayPayAddonsStripePayConnector,
    #[serde(rename = "mms-inbound-longcode-canada")]
    MmsInboundLongcodeCanada,
    #[serde(rename = "mms-inbound-longcode-unitedstates")]
    MmsInboundLongcodeUnitedstates,
    #[serde(rename = "mms-outbound-longcode-canada")]
    MmsOutboundLongcodeCanada,
    #[serde(rename = "mms-outbound-longcode-unitedstates")]
    MmsOutboundLongcodeUnitedstates,
    #[serde(rename = "mms-outbound-toll-free")]
    MmsOutboundTollFree,
    #[serde(rename = "notify-chatappsandotherchannels")]
    NotifyChatappsandotherchannels,
    #[serde(rename = "notify-notifyservices")]
    NotifyNotifyservices,
    #[serde(rename = "notify-pushnotifications")]
    NotifyPushnotifications,
    #[serde(rename = "payment-gateway-connectors")]
    PaymentGatewayConnectors,
    #[serde(rename = "payment-solutions")]
    PaymentSolutions,
    #[serde(rename = "pchat-bucket-adjustment")]
    PchatBucketAdjustment,
    #[serde(rename = "phonenumbers-numbers")]
    PhonenumbersNumbers,
    #[serde(rename = "prog-voice-client-android")]
    ProgVoiceClientAndroid,
    #[serde(rename = "prog-voice-client-android-inbound")]
    ProgVoiceClientAndroidInbound,
    #[serde(rename = "prog-voice-client-android-outbound")]
    ProgVoiceClientAndroidOutbound,
    #[serde(rename = "prog-voice-client-ios")]
    ProgVoiceClientIos,
    #[serde(rename = "prog-voice-client-ios-inbound")]
    ProgVoiceClientIosInbound,
    #[serde(rename = "prog-voice-client-ios-outbound")]
    ProgVoiceClientIosOutbound,
    #[serde(rename = "prog-voice-client-sdk")]
    ProgVoiceClientSdk,
    #[serde(rename = "prog-voice-client-web")]
    ProgVoiceClientWeb,
    #[serde(rename = "prog-voice-client-web-inbound")]
    ProgVoiceClientWebInbound,
    #[serde(rename = "prog-voice-client-web-outbound")]
    ProgVoiceClientWebOutbound,
    #[serde(rename = "programmablevoiceconnectivity-media-streams")]
    ProgrammablevoiceconnectivityMediaStreams,
    #[serde(rename = "pstnconnectivity-byoc")]
    PstnconnectivityByoc,
    #[serde(rename = "pstnconnectivity-emergency")]
    PstnconnectivityEmergency,
    #[serde(rename = "pstnconnectivity-minutes")]
    PstnconnectivityMinutes,
    #[serde(rename = "pstnconnectivity-minutes-1")]
    PstnconnectivityMinutes1,
    #[serde(rename = "pstnconnectivity-minutesinboundlocal")]
    PstnconnectivityMinutesinboundlocal,
    #[serde(rename = "pstnconnectivity-minutesinboundmobile")]
    PstnconnectivityMinutesinboundmobile,
    #[serde(rename = "pstnconnectivity-minutesinboundtollfree")]
    PstnconnectivityMinutesinboundtollfree,
    #[serde(rename = "pstnconnectivity-minutesinboundtollfreelocal")]
    PstnconnectivityMinutesinboundtollfreelocal,
    #[serde(rename = "pstnconnectivity-minutesinboundtollfreemobile")]
    PstnconnectivityMinutesinboundtollfreemobile,
    #[serde(rename = "pv-room-hours")]
    PvRoomHours,
    #[serde(rename = "pv-room-simultaneous-participant-connections")]
    PvRoomSimultaneousParticipantConnections,
    #[serde(rename = "pvideo-room-hours-au1")]
    PvideoRoomHoursAu1,
    #[serde(rename = "pvideo-room-hours-br1")]
    PvideoRoomHoursBr1,
    #[serde(rename = "pvideo-room-hours-ie1")]
    PvideoRoomHoursIe1,
    #[serde(rename = "pvideo-room-hours-jp1")]
    PvideoRoomHoursJp1,
    #[serde(rename = "pvideo-room-hours-sg1")]
    PvideoRoomHoursSg1,
    #[serde(rename = "pvideo-room-hours-us1")]
    PvideoRoomHoursUs1,
    #[serde(rename = "pvideo-room-hours-us2")]
    PvideoRoomHoursUs2,
    #[serde(rename = "recordings-encrypted")]
    RecordingsEncrypted,
    #[serde(rename = "short-code-setup-fees")]
    ShortCodeSetupFees,
    #[serde(rename = "shortcodes-messages-inbound")]
    ShortcodesMessagesInbound,
    #[serde(rename = "shortcodes-messages-outbound")]
    ShortcodesMessagesOutbound,
    #[serde(rename = "sms-messages-registrationfees")]
    SmsMessagesRegistrationfees,
    #[serde(rename = "sms-mms-penalty-fees")]
    SmsMmsPenaltyFees,
    #[serde(rename = "sms-mms-penalty-fees-1")]
    SmsMmsPenaltyFees1,
    #[serde(rename = "sms-pumping-protection-non-usca")]
    SmsPumpingProtectionNonUsca,
    #[serde(rename = "sms-pumping-protection-usca")]
    SmsPumpingProtectionUsca,
    #[serde(rename = "studio")]
    Studio,
    #[serde(rename = "studio-monthly-fees")]
    StudioMonthlyFees,
    #[serde(rename = "supersim")]
    Supersim,
    #[serde(rename = "task-router")]
    TaskRouter,
    #[serde(rename = "task-router-workers")]
    TaskRouterWorkers,
    #[serde(rename = "test-quota-buckets")]
    TestQuotaBuckets,
    #[serde(rename = "test-uc-script-1")]
    TestUcScript1,
    #[serde(rename = "test-uc-script-demo-2")]
    TestUcScriptDemo2,
    #[serde(rename = "text-to-speech")]
    TextToSpeech,
    #[serde(rename = "tme")]
    Tme,
    #[serde(rename = "tts-basic")]
    TtsBasic,
    #[serde(rename = "twilio-editions")]
    TwilioEditions,
    #[serde(rename = "twilio-interconnect-california")]
    TwilioInterconnectCalifornia,
    #[serde(rename = "twilio-interconnect-california-monthly")]
    TwilioInterconnectCaliforniaMonthly,
    #[serde(rename = "twilio-interconnect-california-setup")]
    TwilioInterconnectCaliforniaSetup,
    #[serde(rename = "twilio-interconnect-frankfurt")]
    TwilioInterconnectFrankfurt,
    #[serde(rename = "twilio-interconnect-frankfurt-mo")]
    TwilioInterconnectFrankfurtMo,
    #[serde(rename = "twilio-interconnect-frankfurt-setup")]
    TwilioInterconnectFrankfurtSetup,
    #[serde(rename = "twilio-interconnect-london")]
    TwilioInterconnectLondon,
    #[serde(rename = "twilio-interconnect-london-mo")]
    TwilioInterconnectLondonMo,
    #[serde(rename = "twilio-interconnect-london-setup")]
    TwilioInterconnectLondonSetup,
    #[serde(rename = "twilio-interconnect-sao-paulo")]
    TwilioInterconnectSaoPaulo,
    #[serde(rename = "twilio-interconnect-sao-paulo-monthly")]
    TwilioInterconnectSaoPauloMonthly,
    #[serde(rename = "twilio-interconnect-sao-paulo-setup")]
    TwilioInterconnectSaoPauloSetup,
    #[serde(rename = "twilio-interconnect-singapore")]
    TwilioInterconnectSingapore,
    #[serde(rename = "twilio-interconnect-singapore-mo")]
    TwilioInterconnectSingaporeMo,
    #[serde(rename = "twilio-interconnect-singapore-setup")]
    TwilioInterconnectSingaporeSetup,
    #[serde(rename = "twilio-interconnect-sydney")]
    TwilioInterconnectSydney,
    #[serde(rename = "twilio-interconnect-sydney-mo")]
    TwilioInterconnectSydneyMo,
    #[serde(rename = "twilio-interconnect-sydney-setup")]
    TwilioInterconnectSydneySetup,
    #[serde(rename = "twilio-interconnect-tokyo")]
    TwilioInterconnectTokyo,
    #[serde(rename = "twilio-interconnect-tokyo-mo")]
    TwilioInterconnectTokyoMo,
    #[serde(rename = "twilio-interconnect-tokyo-setup")]
    TwilioInterconnectTokyoSetup,
    #[serde(rename = "twilio-interconnect-va")]
    TwilioInterconnectVa,
    #[serde(rename = "twilio-interconnect-va-mo")]
    TwilioInterconnectVaMo,
    #[serde(rename = "twilio-interconnect-va-setup")]
    TwilioInterconnectVaSetup,
    #[serde(rename = "twiml-verbs")]
    TwimlVerbs,
    #[serde(rename = "twiml-verbs-say")]
    TwimlVerbsSay,
    #[serde(rename = "usage-programmable-messaging-engagement-suite")]
    UsageProgrammableMessagingEngagementSuite,
    #[serde(rename = "usage-programmable-messaging-fees-services")]
    UsageProgrammableMessagingFeesServices,
    #[serde(rename = "verify-outbound-email")]
    VerifyOutboundEmail,
    #[serde(rename = "verify-packaged-plans")]
    VerifyPackagedPlans,
    #[serde(rename = "verify-silent-network-auth")]
    VerifySilentNetworkAuth,
    #[serde(rename = "verify-voice-and-sms")]
    VerifyVoiceAndSms,
    #[serde(rename = "voice-insights-client-insights-monthy-commit")]
    VoiceInsightsClientInsightsMonthyCommit,
    #[serde(rename = "wireless-data-payg-asia-afg")]
    WirelessDataPaygAsiaAfg,
    #[serde(rename = "wireless-multi-imsi-sim-commands")]
    WirelessMultiImsiSimCommands,
    #[serde(rename = "wireless-multi-imsi-sim-commands-usa")]
    WirelessMultiImsiSimCommandsUsa,
    #[serde(rename = "wireless-multi-imsi-sim-data")]
    WirelessMultiImsiSimData,
    #[serde(rename = "wireless-multi-imsi-sim-data-eu28")]
    WirelessMultiImsiSimDataEu28,
    #[serde(rename = "wireless-multi-imsi-sim-data-usa")]
    WirelessMultiImsiSimDataUsa,
    #[serde(rename = "wireless-multi-imsi-sim-monthly-fees")]
    WirelessMultiImsiSimMonthlyFees,
    #[serde(rename = "wireless-multi-imsi-sim-usage")]
    WirelessMultiImsiSimUsage,
    #[serde(rename = "wireless-super-sim-data-north-america")]
    WirelessSuperSimDataNorthAmerica,
    #[serde(rename = "wireless-super-sim-usage")]
    WirelessSuperSimUsage,
}

impl std::fmt::Display for UsageRecordTodayEnumCategory {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::A2p10dlcRegistrationfeesBrandregistration => {
                write!(f, "a2p-10dlc-registrationfees-brandregistration")
            }
            Self::A2p10dlcRegistrationfeesBv => write!(f, "a2p-10dlc-registrationfees-bv"),
            Self::A2p10dlcRegistrationfeesCampaigncharges => {
                write!(f, "a2p-10dlc-registrationfees-campaigncharges")
            }
            Self::A2p10dlcRegistrationfeesCampaignregistration => {
                write!(f, "a2p-10dlc-registrationfees-campaignregistration")
            }
            Self::A2p10dlcRegistrationfeesCampaignvetting => {
                write!(f, "a2p-10dlc-registrationfees-campaignvetting")
            }
            Self::A2p10dlcRegistrationfeesMonthly => {
                write!(f, "a2p-10dlc-registrationfees-monthly")
            }
            Self::A2p10dlcRegistrationfeesOnetime => {
                write!(f, "a2p-10dlc-registrationfees-onetime")
            }
            Self::A2pRegistrationFees => write!(f, "a2p-registration-fees"),
            Self::AccountSecurity => write!(f, "account-security"),
            Self::AgentConference => write!(f, "agent-conference"),
            Self::AgentCopilot => write!(f, "agent-copilot"),
            Self::AgentCopilotMessages => write!(f, "agent-copilot-messages"),
            Self::AgentCopilotParticipantMinutes => write!(f, "agent-copilot-participant-minutes"),
            Self::AiAssistants => write!(f, "ai-assistants"),
            Self::AiAssistantsVoice => write!(f, "ai-assistants-voice"),
            Self::AmazonPolly => write!(f, "amazon-polly"),
            Self::AnsweringMachineDetection => write!(f, "answering-machine-detection"),
            Self::Assets => write!(f, "assets"),
            Self::AudienceMinutes => write!(f, "audience-minutes"),
            Self::AudienceMinutesAudio => write!(f, "audience-minutes-audio"),
            Self::AuthyAuthentications => write!(f, "authy-authentications"),
            Self::AuthyCallsOutbound => write!(f, "authy-calls-outbound"),
            Self::AuthyEmailAuthentications => write!(f, "authy-email-authentications"),
            Self::AuthyMonthlyFees => write!(f, "authy-monthly-fees"),
            Self::AuthyOutboundEmail => write!(f, "authy-outbound-email"),
            Self::AuthyPhoneIntelligence => write!(f, "authy-phone-intelligence"),
            Self::AuthyPhoneVerifications => write!(f, "authy-phone-verifications"),
            Self::AuthySmsOutbound => write!(f, "authy-sms-outbound"),
            Self::AuthyVerifyEmailVerifications => write!(f, "authy-verify-email-verifications"),
            Self::AuthyVerifyOutboundEmail => write!(f, "authy-verify-outbound-email"),
            Self::Autopilot => write!(f, "autopilot"),
            Self::AutopilotHomeAssistants => write!(f, "autopilot-home-assistants"),
            Self::AutopilotMessaging => write!(f, "autopilot-messaging"),
            Self::AutopilotOther => write!(f, "autopilot-other"),
            Self::AutopilotVoice => write!(f, "autopilot-voice"),
            Self::BasicPeerToPeerRoomsParticipantMinutes => {
                write!(f, "basic-peer-to-peer-rooms-participant-minutes")
            }
            Self::BrandedCalling => write!(f, "branded-calling"),
            Self::BundleSmsBucket => write!(f, "bundle-sms-bucket"),
            Self::BundleSubscriptionFees => write!(f, "bundle-subscription-fees"),
            Self::CallForwardingLookups => write!(f, "call-forwarding-lookups"),
            Self::CallProgessEvents => write!(f, "call-progess-events"),
            Self::Calleridlookups => write!(f, "calleridlookups"),
            Self::Calls => write!(f, "calls"),
            Self::CallsClient => write!(f, "calls-client"),
            Self::CallsEmergency => write!(f, "calls-emergency"),
            Self::CallsGlobalconference => write!(f, "calls-globalconference"),
            Self::CallsInbound => write!(f, "calls-inbound"),
            Self::CallsInboundLocal => write!(f, "calls-inbound-local"),
            Self::CallsInboundMobile => write!(f, "calls-inbound-mobile"),
            Self::CallsInboundTollfree => write!(f, "calls-inbound-tollfree"),
            Self::CallsInboundTollfreeLocal => write!(f, "calls-inbound-tollfree-local"),
            Self::CallsInboundTollfreeMobile => write!(f, "calls-inbound-tollfree-mobile"),
            Self::CallsMediaStreamMinutes => write!(f, "calls-media-stream-minutes"),
            Self::CallsOutbound => write!(f, "calls-outbound"),
            Self::CallsPayVerbTransactions => write!(f, "calls-pay-verb-transactions"),
            Self::CallsRecordings => write!(f, "calls-recordings"),
            Self::CallsSip => write!(f, "calls-sip"),
            Self::CallsSipInbound => write!(f, "calls-sip-inbound"),
            Self::CallsSipOutbound => write!(f, "calls-sip-outbound"),
            Self::CallsTextToSpeech => write!(f, "calls-text-to-speech"),
            Self::CallsTransfers => write!(f, "calls-transfers"),
            Self::CarrierLookups => write!(f, "carrier-lookups"),
            Self::Category => write!(f, "category"),
            Self::Channels => write!(f, "channels"),
            Self::ChannelsMessaging => write!(f, "channels-messaging"),
            Self::ChannelsMessagingInbound => write!(f, "channels-messaging-inbound"),
            Self::ChannelsMessagingOutbound => write!(f, "channels-messaging-outbound"),
            Self::ChannelsWhatsapp => write!(f, "channels-whatsapp"),
            Self::ChannelsWhatsappConversationAuthentication => {
                write!(f, "channels-whatsapp-conversation-authentication")
            }
            Self::ChannelsWhatsappConversationFree => {
                write!(f, "channels-whatsapp-conversation-free")
            }
            Self::ChannelsWhatsappConversationMarketing => {
                write!(f, "channels-whatsapp-conversation-marketing")
            }
            Self::ChannelsWhatsappConversationService => {
                write!(f, "channels-whatsapp-conversation-service")
            }
            Self::ChannelsWhatsappConversationUtility => {
                write!(f, "channels-whatsapp-conversation-utility")
            }
            Self::ChannelsWhatsappInbound => write!(f, "channels-whatsapp-inbound"),
            Self::ChannelsWhatsappOutbound => write!(f, "channels-whatsapp-outbound"),
            Self::ChatVirtualAgent => write!(f, "chat-virtual-agent"),
            Self::ConversationRelay => write!(f, "conversation-relay"),
            Self::Conversations => write!(f, "conversations"),
            Self::ConversationsApiRequests => write!(f, "conversations-api-requests"),
            Self::ConversationsConversationEvents => write!(f, "conversations-conversation-events"),
            Self::ConversationsEndpointConnectivity => {
                write!(f, "conversations-endpoint-connectivity")
            }
            Self::ConversationsEvents => write!(f, "conversations-events"),
            Self::ConversationsParticipantEvents => write!(f, "conversations-participant-events"),
            Self::ConversationsParticipants => write!(f, "conversations-participants"),
            Self::Cps => write!(f, "cps"),
            Self::CreditTransfer => write!(f, "credit-transfer"),
            Self::Email => write!(f, "email"),
            Self::EmergingTech => write!(f, "emerging-tech"),
            Self::EngagementSuitePackagedPlans => write!(f, "engagement-suite-packaged-plans"),
            Self::EnhancedLineTypeLookups => write!(f, "enhanced-line-type-lookups"),
            Self::Enterprise => write!(f, "enterprise"),
            Self::Events => write!(f, "events"),
            Self::ExperimentFranceSms => write!(f, "experiment-france-sms"),
            Self::ExperimentIndiaSms => write!(f, "experiment-india-sms"),
            Self::ExperimentUkSms => write!(f, "experiment-uk-sms"),
            Self::FailedMessageProcessingFee => write!(f, "failed-message-processing-fee"),
            Self::Flex => write!(f, "flex"),
            Self::FlexActiveUserHours => write!(f, "flex-active-user-hours"),
            Self::FlexConcurrentUsers => write!(f, "flex-concurrent-users"),
            Self::FlexConversationalInsights => write!(f, "flex-conversational-insights"),
            Self::FlexConversationalInsightsMessages => {
                write!(f, "flex-conversational-insights-messages")
            }
            Self::FlexConversationalInsightsVoiceMinutes => {
                write!(f, "flex-conversational-insights-voice-minutes")
            }
            Self::FlexEmailUsage => write!(f, "flex-email-usage"),
            Self::FlexMessagingUsage => write!(f, "flex-messaging-usage"),
            Self::FlexPartnerSpinsci => write!(f, "flex-partner-spinsci"),
            Self::FlexPartnerXcelerate => write!(f, "flex-partner-xcelerate"),
            Self::FlexResellerEcosystem => write!(f, "flex-reseller-ecosystem"),
            Self::FlexUniqueUser => write!(f, "flex-unique-user"),
            Self::FlexUsage => write!(f, "flex-usage"),
            Self::FlexUsers => write!(f, "flex-users"),
            Self::FlexVoiceMinute => write!(f, "flex-voice-minute"),
            Self::FlexYtica => write!(f, "flex-ytica"),
            Self::FraudLookups => write!(f, "fraud-lookups"),
            Self::Frontline => write!(f, "frontline"),
            Self::FrontlineUsers => write!(f, "frontline-users"),
            Self::Functions => write!(f, "functions"),
            Self::GenericPayTransactions => write!(f, "generic-pay-transactions"),
            Self::GroupRooms => write!(f, "group-rooms"),
            Self::GroupRoomsDataTrack => write!(f, "group-rooms-data-track"),
            Self::GroupRoomsEncryptedMediaRecorded => {
                write!(f, "group-rooms-encrypted-media-recorded")
            }
            Self::GroupRoomsMediaDownloaded => write!(f, "group-rooms-media-downloaded"),
            Self::GroupRoomsMediaRecorded => write!(f, "group-rooms-media-recorded"),
            Self::GroupRoomsMediaRouted => write!(f, "group-rooms-media-routed"),
            Self::GroupRoomsMediaStored => write!(f, "group-rooms-media-stored"),
            Self::GroupRoomsParticipantMinutes => write!(f, "group-rooms-participant-minutes"),
            Self::GroupRoomsRecordedMinutes => write!(f, "group-rooms-recorded-minutes"),
            Self::IpMessaging => write!(f, "ip-messaging"),
            Self::IpMessagingCommands => write!(f, "ip-messaging-commands"),
            Self::IpMessagingDataStorage => write!(f, "ip-messaging-data-storage"),
            Self::IpMessagingDataTransfer => write!(f, "ip-messaging-data-transfer"),
            Self::IpMessagingEndpointConnectivity => {
                write!(f, "ip-messaging-endpoint-connectivity")
            }
            Self::IvrVirtualAgentCustomVoices => write!(f, "ivr-virtual-agent-custom-voices"),
            Self::IvrVirtualAgentGenai => write!(f, "ivr-virtual-agent-genai"),
            Self::LineStatusLookups => write!(f, "line-status-lookups"),
            Self::LiveActivityLookups => write!(f, "live-activity-lookups"),
            Self::LookupBucketAdjustment => write!(f, "lookup-bucket-adjustment"),
            Self::LookupIdentityMatch => write!(f, "lookup-identity-match"),
            Self::Lookups => write!(f, "lookups"),
            Self::Marketplace => write!(f, "marketplace"),
            Self::MarketplaceAlgorithmiaNamedEntityRecognition => {
                write!(f, "marketplace-algorithmia-named-entity-recognition")
            }
            Self::MarketplaceCadenceTranscription => write!(f, "marketplace-cadence-transcription"),
            Self::MarketplaceCadenceTranslation => write!(f, "marketplace-cadence-translation"),
            Self::MarketplaceCapioSpeechToText => write!(f, "marketplace-capio-speech-to-text"),
            Self::MarketplaceConvrizaAbaba => write!(f, "marketplace-convriza-ababa"),
            Self::MarketplaceDeepgramPhraseDetector => {
                write!(f, "marketplace-deepgram-phrase-detector")
            }
            Self::MarketplaceDeepgramTranscription => {
                write!(f, "marketplace-deepgram-transcription")
            }
            Self::MarketplaceDeepgramTranscriptionBase => {
                write!(f, "marketplace-deepgram-transcription-base")
            }
            Self::MarketplaceDeepgramTransscriptionEnhanced => {
                write!(f, "marketplace-deepgram-transscription-enhanced")
            }
            Self::MarketplaceDigitalSegmentBusinessInfo => {
                write!(f, "marketplace-digital-segment-business-info")
            }
            Self::MarketplaceFacebookOfflineConversions => {
                write!(f, "marketplace-facebook-offline-conversions")
            }
            Self::MarketplaceGoogleSpeechToText => write!(f, "marketplace-google-speech-to-text"),
            Self::MarketplaceIbmWatsonMessageInsights => {
                write!(f, "marketplace-ibm-watson-message-insights")
            }
            Self::MarketplaceIbmWatsonMessageSentiment => {
                write!(f, "marketplace-ibm-watson-message-sentiment")
            }
            Self::MarketplaceIbmWatsonRecordingAnalysis => {
                write!(f, "marketplace-ibm-watson-recording-analysis")
            }
            Self::MarketplaceIbmWatsonToneAnalyzer => {
                write!(f, "marketplace-ibm-watson-tone-analyzer")
            }
            Self::MarketplaceIcehookSystemsScout => write!(f, "marketplace-icehook-systems-scout"),
            Self::MarketplaceInfogroupDataaxleBizinfo => {
                write!(f, "marketplace-infogroup-dataaxle-bizinfo")
            }
            Self::MarketplaceKeenIoContactCenterAnalytics => {
                write!(f, "marketplace-keen-io-contact-center-analytics")
            }
            Self::MarketplaceMarchexCleancall => write!(f, "marketplace-marchex-cleancall"),
            Self::MarketplaceMarchexRecordingAnalysis => {
                write!(f, "marketplace-marchex-recording-analysis")
            }
            Self::MarketplaceMarchexSentimentAnalysisForSms => {
                write!(f, "marketplace-marchex-sentiment-analysis-for-sms")
            }
            Self::MarketplaceMarketplaceNextcallerSocialId => {
                write!(f, "marketplace-marketplace-nextcaller-social-id")
            }
            Self::MarketplaceMobileCommonsOptOutClassifier => {
                write!(f, "marketplace-mobile-commons-opt-out-classifier")
            }
            Self::MarketplaceNexiwaveVoicemailToText => {
                write!(f, "marketplace-nexiwave-voicemail-to-text")
            }
            Self::MarketplaceNextcallerAdvancedCallerIdentification => {
                write!(f, "marketplace-nextcaller-advanced-caller-identification")
            }
            Self::MarketplaceNomoroboSpamScore => write!(f, "marketplace-nomorobo-spam-score"),
            Self::MarketplacePayAddons => write!(f, "marketplace-pay-addons"),
            Self::MarketplacePayAddonsBasecommercePayConnector => {
                write!(f, "marketplace-pay-addons-basecommerce-pay-connector")
            }
            Self::MarketplacePayAddonsBraintreePayConnector => {
                write!(f, "marketplace-pay-addons-braintree-pay-connector")
            }
            Self::MarketplacePayAddonsCardconnectPayConnector => {
                write!(f, "marketplace-pay-addons-cardconnect-pay-connector")
            }
            Self::MarketplacePayAddonsChasePayConnector => {
                write!(f, "marketplace-pay-addons-chase-pay-connector")
            }
            Self::MarketplacePayAddonsShuttlePayConnector => {
                write!(f, "marketplace-pay-addons-shuttle-pay-connector")
            }
            Self::MarketplacePayAddonsStripePayConnector => {
                write!(f, "marketplace-pay-addons-stripe-pay-connector")
            }
            Self::MarketplacePayfoneTcpaCompliance => {
                write!(f, "marketplace-payfone-tcpa-compliance")
            }
            Self::MarketplacePolyAiConnector => write!(f, "marketplace-poly-ai-connector"),
            Self::MarketplaceRealphonevalidation => write!(f, "marketplace-realphonevalidation"),
            Self::MarketplaceRemeetingAutomaticSpeechRecognition => {
                write!(f, "marketplace-remeeting-automatic-speech-recognition")
            }
            Self::MarketplaceSpokePhoneLicensePro => {
                write!(f, "marketplace-spoke-phone-license-pro")
            }
            Self::MarketplaceSpokePhoneLicenseStandard => {
                write!(f, "marketplace-spoke-phone-license-standard")
            }
            Self::MarketplaceTcpaDefenseSolutionsBlacklistFeed => {
                write!(f, "marketplace-tcpa-defense-solutions-blacklist-feed")
            }
            Self::MarketplaceTeloOpencnam => write!(f, "marketplace-telo-opencnam"),
            Self::MarketplaceTrestleSolutionsCallerIdentification => {
                write!(f, "marketplace-trestle-solutions-caller-identification")
            }
            Self::MarketplaceTruecnamTrueSpam => write!(f, "marketplace-truecnam-true-spam"),
            Self::MarketplaceTwilioCallerNameLookupUs => {
                write!(f, "marketplace-twilio-caller-name-lookup-us")
            }
            Self::MarketplaceTwilioCarrierInformationLookup => {
                write!(f, "marketplace-twilio-carrier-information-lookup")
            }
            Self::MarketplaceVoicebasePci => write!(f, "marketplace-voicebase-pci"),
            Self::MarketplaceVoicebaseTranscription => {
                write!(f, "marketplace-voicebase-transcription")
            }
            Self::MarketplaceVoicebaseTranscriptionCustomVocabulary => {
                write!(f, "marketplace-voicebase-transcription-custom-vocabulary")
            }
            Self::MarketplaceWebPurifyProfanityFilter => {
                write!(f, "marketplace-web-purify-profanity-filter")
            }
            Self::MarketplaceWhitepagesProCallerIdentification => {
                write!(f, "marketplace-whitepages-pro-caller-identification")
            }
            Self::MarketplaceWhitepagesProPhoneIntelligence => {
                write!(f, "marketplace-whitepages-pro-phone-intelligence")
            }
            Self::MarketplaceWhitepagesProPhoneReputation => {
                write!(f, "marketplace-whitepages-pro-phone-reputation")
            }
            Self::MarketplaceWolfarmSpokenResults => {
                write!(f, "marketplace-wolfarm-spoken-results")
            }
            Self::MarketplaceWolframShortAnswer => write!(f, "marketplace-wolfram-short-answer"),
            Self::MarketplaceYticaContactCenterReportingAnalytics => {
                write!(f, "marketplace-ytica-contact-center-reporting-analytics")
            }
            Self::MarketplayPayAddonsShuttlePayConnector => {
                write!(f, "marketplay-pay-addons-shuttle-pay-connector")
            }
            Self::MediaComposerMinutes => write!(f, "media-composer-minutes"),
            Self::Mediastorage => write!(f, "mediastorage"),
            Self::MinSpendAdjustments => write!(f, "min-spend-adjustments"),
            Self::Mms => write!(f, "mms"),
            Self::MmsInbound => write!(f, "mms-inbound"),
            Self::MmsInboundLongcode => write!(f, "mms-inbound-longcode"),
            Self::MmsInboundShortcode => write!(f, "mms-inbound-shortcode"),
            Self::MmsInboundTollFree => write!(f, "mms-inbound-toll-free"),
            Self::MmsMessagesCarrierfees => write!(f, "mms-messages-carrierfees"),
            Self::MmsOutbound => write!(f, "mms-outbound"),
            Self::MmsOutboundLongcode => write!(f, "mms-outbound-longcode"),
            Self::MmsOutboundShortcode => write!(f, "mms-outbound-shortcode"),
            Self::MmsOutboundTollfree => write!(f, "mms-outbound-tollfree"),
            Self::Monitor => write!(f, "monitor"),
            Self::MonitorReads => write!(f, "monitor-reads"),
            Self::MonitorStorage => write!(f, "monitor-storage"),
            Self::MonitorWrites => write!(f, "monitor-writes"),
            Self::Notify => write!(f, "notify"),
            Self::NotifyActionsAttempts => write!(f, "notify-actions-attempts"),
            Self::NotifyChannels => write!(f, "notify-channels"),
            Self::NumberFormatLookups => write!(f, "number-format-lookups"),
            Self::Pchat => write!(f, "pchat"),
            Self::PchatActions => write!(f, "pchat-actions"),
            Self::PchatAps => write!(f, "pchat-aps"),
            Self::PchatConvMedStorage => write!(f, "pchat-conv-med-storage"),
            Self::PchatMessages => write!(f, "pchat-messages"),
            Self::PchatNotifications => write!(f, "pchat-notifications"),
            Self::PchatReads => write!(f, "pchat-reads"),
            Self::PchatUsers => write!(f, "pchat-users"),
            Self::PeerToPeerRoomsParticipantMinutes => {
                write!(f, "peer-to-peer-rooms-participant-minutes")
            }
            Self::Pfax => write!(f, "pfax"),
            Self::PfaxMinutes => write!(f, "pfax-minutes"),
            Self::PfaxMinutesInbound => write!(f, "pfax-minutes-inbound"),
            Self::PfaxMinutesOutbound => write!(f, "pfax-minutes-outbound"),
            Self::PfaxPages => write!(f, "pfax-pages"),
            Self::PhoneQualityScoreLookups => write!(f, "phone-quality-score-lookups"),
            Self::Phonenumbers => write!(f, "phonenumbers"),
            Self::PhonenumbersCps => write!(f, "phonenumbers-cps"),
            Self::PhonenumbersEmergency => write!(f, "phonenumbers-emergency"),
            Self::PhonenumbersLocal => write!(f, "phonenumbers-local"),
            Self::PhonenumbersMobile => write!(f, "phonenumbers-mobile"),
            Self::PhonenumbersPorting => write!(f, "phonenumbers-porting"),
            Self::PhonenumbersSetups => write!(f, "phonenumbers-setups"),
            Self::PhonenumbersTollfree => write!(f, "phonenumbers-tollfree"),
            Self::Premiumsupport => write!(f, "premiumsupport"),
            Self::PremiumsupportPercentageSpend => write!(f, "premiumsupport-percentage-spend"),
            Self::ProgrammablevoicePlatform => write!(f, "programmablevoice-platform"),
            Self::ProgrammablevoiceconnClientsdk => write!(f, "programmablevoiceconn-clientsdk"),
            Self::ProgrammablevoiceconnClientsdkInbound => {
                write!(f, "programmablevoiceconn-clientsdk-inbound")
            }
            Self::ProgrammablevoiceconnClientsdkOutbound => {
                write!(f, "programmablevoiceconn-clientsdk-outbound")
            }
            Self::ProgrammablevoiceconnOnnet => write!(f, "programmablevoiceconn-onnet"),
            Self::ProgrammablevoiceconnOnnetInbound => {
                write!(f, "programmablevoiceconn-onnet-inbound")
            }
            Self::ProgrammablevoiceconnOnnetOutbound => {
                write!(f, "programmablevoiceconn-onnet-outbound")
            }
            Self::ProgrammablevoiceconnSip => write!(f, "programmablevoiceconn-sip"),
            Self::ProgrammablevoiceconnSipInbound => write!(f, "programmablevoiceconn-sip-inbound"),
            Self::ProgrammablevoiceconnSipOutbound => {
                write!(f, "programmablevoiceconn-sip-outbound")
            }
            Self::Programmablevoiceconnectivity => write!(f, "programmablevoiceconnectivity"),
            Self::Proxy => write!(f, "proxy"),
            Self::ProxyActiveSessions => write!(f, "proxy-active-sessions"),
            Self::ProxyBucketAdjustment => write!(f, "proxy-bucket-adjustment"),
            Self::ProxyLicenses => write!(f, "proxy-licenses"),
            Self::Pstnconnectivity => write!(f, "pstnconnectivity"),
            Self::PstnconnectivityInbound => write!(f, "pstnconnectivity-inbound"),
            Self::PstnconnectivityOutbound => write!(f, "pstnconnectivity-outbound"),
            Self::Pv => write!(f, "pv"),
            Self::PvBasicRooms => write!(f, "pv-basic-rooms"),
            Self::PvCompositionMediaDownloaded => write!(f, "pv-composition-media-downloaded"),
            Self::PvCompositionMediaEncrypted => write!(f, "pv-composition-media-encrypted"),
            Self::PvCompositionMediaStored => write!(f, "pv-composition-media-stored"),
            Self::PvCompositionMinutes => write!(f, "pv-composition-minutes"),
            Self::PvRecordingCompositions => write!(f, "pv-recording-compositions"),
            Self::PvRoomParticipants => write!(f, "pv-room-participants"),
            Self::PvRoomParticipantsAu1 => write!(f, "pv-room-participants-au1"),
            Self::PvRoomParticipantsBr1 => write!(f, "pv-room-participants-br1"),
            Self::PvRoomParticipantsIe1 => write!(f, "pv-room-participants-ie1"),
            Self::PvRoomParticipantsJp1 => write!(f, "pv-room-participants-jp1"),
            Self::PvRoomParticipantsSg1 => write!(f, "pv-room-participants-sg1"),
            Self::PvRoomParticipantsUs1 => write!(f, "pv-room-participants-us1"),
            Self::PvRoomParticipantsUs2 => write!(f, "pv-room-participants-us2"),
            Self::PvRooms => write!(f, "pv-rooms"),
            Self::PvSipEndpointRegistrations => write!(f, "pv-sip-endpoint-registrations"),
            Self::RcsMessages => write!(f, "rcs-messages"),
            Self::ReassignedNumber => write!(f, "reassigned-number"),
            Self::Recordings => write!(f, "recordings"),
            Self::Recordingstorage => write!(f, "recordingstorage"),
            Self::Shortcodes => write!(f, "shortcodes"),
            Self::ShortcodesCustomerowned => write!(f, "shortcodes-customerowned"),
            Self::ShortcodesMmsEnablement => write!(f, "shortcodes-mms-enablement"),
            Self::ShortcodesMps => write!(f, "shortcodes-mps"),
            Self::ShortcodesRandom => write!(f, "shortcodes-random"),
            Self::ShortcodesSetupFees => write!(f, "shortcodes-setup-fees"),
            Self::ShortcodesUk => write!(f, "shortcodes-uk"),
            Self::ShortcodesVanity => write!(f, "shortcodes-vanity"),
            Self::SimSwapLookups => write!(f, "sim-swap-lookups"),
            Self::SipSecureMedia => write!(f, "sip-secure-media"),
            Self::SmallGroupRooms => write!(f, "small-group-rooms"),
            Self::SmallGroupRoomsDataTrack => write!(f, "small-group-rooms-data-track"),
            Self::SmallGroupRoomsParticipantMinutes => {
                write!(f, "small-group-rooms-participant-minutes")
            }
            Self::Sms => write!(f, "sms"),
            Self::SmsInbound => write!(f, "sms-inbound"),
            Self::SmsInboundLongcode => write!(f, "sms-inbound-longcode"),
            Self::SmsInboundShortcode => write!(f, "sms-inbound-shortcode"),
            Self::SmsInboundTollfree => write!(f, "sms-inbound-tollfree"),
            Self::SmsMessagesCarrierfees => write!(f, "sms-messages-carrierfees"),
            Self::SmsMessagesFeatures => write!(f, "sms-messages-features"),
            Self::SmsMessagesFeaturesEngagementSuite => {
                write!(f, "sms-messages-features-engagement-suite")
            }
            Self::SmsMessagesFeaturesMessageRedaction => {
                write!(f, "sms-messages-features-message-redaction")
            }
            Self::SmsMessagesFeaturesSenderid => write!(f, "sms-messages-features-senderid"),
            Self::SmsMps => write!(f, "sms-mps"),
            Self::SmsMpsShortcode => write!(f, "sms-mps-shortcode"),
            Self::SmsMpsTollfree => write!(f, "sms-mps-tollfree"),
            Self::SmsMpsTollfreeSetup => write!(f, "sms-mps-tollfree-setup"),
            Self::SmsNationalRegulatoryProtection => {
                write!(f, "sms-national-regulatory-protection")
            }
            Self::SmsOutbound => write!(f, "sms-outbound"),
            Self::SmsOutboundContentInspection => write!(f, "sms-outbound-content-inspection"),
            Self::SmsOutboundLongcode => write!(f, "sms-outbound-longcode"),
            Self::SmsOutboundShortcode => write!(f, "sms-outbound-shortcode"),
            Self::SmsOutboundTollfree => write!(f, "sms-outbound-tollfree"),
            Self::SmsPumpingProtection => write!(f, "sms-pumping-protection"),
            Self::SmsPumpingRisk => write!(f, "sms-pumping-risk"),
            Self::SmsmessagesBucketAdjustments => write!(f, "smsmessages-bucket-adjustments"),
            Self::SmsmessagesOutboundDomestic => write!(f, "smsmessages-outbound-domestic"),
            Self::SpeechRecognition => write!(f, "speech-recognition"),
            Self::StudioEngagements => write!(f, "studio-engagements"),
            Self::Sync => write!(f, "sync"),
            Self::SyncActions => write!(f, "sync-actions"),
            Self::SyncEndpointHours => write!(f, "sync-endpoint-hours"),
            Self::SyncEndpointHoursAboveDailyCap => {
                write!(f, "sync-endpoint-hours-above-daily-cap")
            }
            Self::TaskrouterTasks => write!(f, "taskrouter-tasks"),
            Self::Totalprice => write!(f, "totalprice"),
            Self::Transcriptions => write!(f, "transcriptions"),
            Self::TrunkingCps => write!(f, "trunking-cps"),
            Self::TrunkingEmergencyCalls => write!(f, "trunking-emergency-calls"),
            Self::TrunkingOrigination => write!(f, "trunking-origination"),
            Self::TrunkingOriginationLocal => write!(f, "trunking-origination-local"),
            Self::TrunkingOriginationMobile => write!(f, "trunking-origination-mobile"),
            Self::TrunkingOriginationTollfree => write!(f, "trunking-origination-tollfree"),
            Self::TrunkingRecordings => write!(f, "trunking-recordings"),
            Self::TrunkingSecure => write!(f, "trunking-secure"),
            Self::TrunkingTermination => write!(f, "trunking-termination"),
            Self::TtsGoogle => write!(f, "tts-google"),
            Self::Turnmegabytes => write!(f, "turnmegabytes"),
            Self::TurnmegabytesAustralia => write!(f, "turnmegabytes-australia"),
            Self::TurnmegabytesBrasil => write!(f, "turnmegabytes-brasil"),
            Self::TurnmegabytesGermany => write!(f, "turnmegabytes-germany"),
            Self::TurnmegabytesIndia => write!(f, "turnmegabytes-india"),
            Self::TurnmegabytesIreland => write!(f, "turnmegabytes-ireland"),
            Self::TurnmegabytesJapan => write!(f, "turnmegabytes-japan"),
            Self::TurnmegabytesSingapore => write!(f, "turnmegabytes-singapore"),
            Self::TurnmegabytesUseast => write!(f, "turnmegabytes-useast"),
            Self::TurnmegabytesUswest => write!(f, "turnmegabytes-uswest"),
            Self::TwilioForSalesforce => write!(f, "twilio-for-salesforce"),
            Self::TwilioForSalesforceLicenses => write!(f, "twilio-for-salesforce-licenses"),
            Self::TwilioInterconnect => write!(f, "twilio-interconnect"),
            Self::Twiml => write!(f, "twiml"),
            Self::UsageFlexVideo => write!(f, "usage-flex-video"),
            Self::UsageFunctions => write!(f, "usage-functions"),
            Self::UsageRcsBasicMessagesOutbound => write!(f, "usage-rcs-basic-messages-outbound"),
            Self::UsageRcsMessages => write!(f, "usage-rcs-messages"),
            Self::UsageRcsMessagesInbound => write!(f, "usage-rcs-messages-inbound"),
            Self::UsageRcsMessagingCarrierFees => write!(f, "usage-rcs-messaging-carrier-fees"),
            Self::UsageRcsSingleMessagesOutbound => write!(f, "usage-rcs-single-messages-outbound"),
            Self::VerifyPackagePlans => write!(f, "verify-package-plans"),
            Self::VerifyPush => write!(f, "verify-push"),
            Self::VerifySna => write!(f, "verify-sna"),
            Self::VerifyTotp => write!(f, "verify-totp"),
            Self::VerifyVoiceSms => write!(f, "verify-voice-sms"),
            Self::VerifyWhatsappConversationsBusinessInitiated => {
                write!(f, "verify-whatsapp-conversations-business-initiated")
            }
            Self::VideoRecordings => write!(f, "video-recordings"),
            Self::VideoRoomsTurnMegabytes => write!(f, "video-rooms-turn-megabytes"),
            Self::VirtualAgent => write!(f, "virtual-agent"),
            Self::VoiceInsights => write!(f, "voice-insights"),
            Self::VoiceInsightsClientInsightsOnDemandMinute => {
                write!(f, "voice-insights-client-insights-on-demand-minute")
            }
            Self::VoiceInsightsPtsnInsightsOnDemandMinute => {
                write!(f, "voice-insights-ptsn-insights-on-demand-minute")
            }
            Self::VoiceInsightsSipInterfaceInsightsOnDemandMinute => {
                write!(f, "voice-insights-sip-interface-insights-on-demand-minute")
            }
            Self::VoiceInsightsSipTrunkingInsightsOnDemandMinute => {
                write!(f, "voice-insights-sip-trunking-insights-on-demand-minute")
            }
            Self::VoiceIntelligence => write!(f, "voice-intelligence"),
            Self::VoiceIntelligenceEipOperators => write!(f, "voice-intelligence-eip-operators"),
            Self::VoiceIntelligenceOperators => write!(f, "voice-intelligence-operators"),
            Self::VoiceIntelligenceTranscription => write!(f, "voice-intelligence-transcription"),
            Self::Wds => write!(f, "wds"),
            Self::Wireless => write!(f, "wireless"),
            Self::WirelessData => write!(f, "wireless-data"),
            Self::WirelessDataPayg => write!(f, "wireless-data-payg"),
            Self::WirelessDataPaygAfrica => write!(f, "wireless-data-payg-africa"),
            Self::WirelessDataPaygAsia => write!(f, "wireless-data-payg-asia"),
            Self::WirelessDataPaygCentralandsouthamerica => {
                write!(f, "wireless-data-payg-centralandsouthamerica")
            }
            Self::WirelessDataPaygEurope => write!(f, "wireless-data-payg-europe"),
            Self::WirelessDataPaygNorthamerica => write!(f, "wireless-data-payg-northamerica"),
            Self::WirelessDataPaygOceania => write!(f, "wireless-data-payg-oceania"),
            Self::WirelessDataQuota1 => write!(f, "wireless-data-quota1"),
            Self::WirelessDataQuota1Africa => write!(f, "wireless-data-quota1-africa"),
            Self::WirelessDataQuota1Asia => write!(f, "wireless-data-quota1-asia"),
            Self::WirelessDataQuota1Centralandsouthamerica => {
                write!(f, "wireless-data-quota1-centralandsouthamerica")
            }
            Self::WirelessDataQuota1Europe => write!(f, "wireless-data-quota1-europe"),
            Self::WirelessDataQuota1Northamerica => write!(f, "wireless-data-quota1-northamerica"),
            Self::WirelessDataQuota1Oceania => write!(f, "wireless-data-quota1-oceania"),
            Self::WirelessDataQuota10 => write!(f, "wireless-data-quota10"),
            Self::WirelessDataQuota10Africa => write!(f, "wireless-data-quota10-africa"),
            Self::WirelessDataQuota10Asia => write!(f, "wireless-data-quota10-asia"),
            Self::WirelessDataQuota10Centralandsouthamerica => {
                write!(f, "wireless-data-quota10-centralandsouthamerica")
            }
            Self::WirelessDataQuota10Europe => write!(f, "wireless-data-quota10-europe"),
            Self::WirelessDataQuota10Northamerica => {
                write!(f, "wireless-data-quota10-northamerica")
            }
            Self::WirelessDataQuota10Oceania => write!(f, "wireless-data-quota10-oceania"),
            Self::WirelessDataQuota50 => write!(f, "wireless-data-quota50"),
            Self::WirelessDataQuota50Africa => write!(f, "wireless-data-quota50-africa"),
            Self::WirelessDataQuota50Asia => write!(f, "wireless-data-quota50-asia"),
            Self::WirelessDataQuota50Centralandsouthamerica => {
                write!(f, "wireless-data-quota50-centralandsouthamerica")
            }
            Self::WirelessDataQuota50Europe => write!(f, "wireless-data-quota50-europe"),
            Self::WirelessDataQuota50Northamerica => {
                write!(f, "wireless-data-quota50-northamerica")
            }
            Self::WirelessDataQuota50Oceania => write!(f, "wireless-data-quota50-oceania"),
            Self::WirelessDataQuotacustom => write!(f, "wireless-data-quotacustom"),
            Self::WirelessDataQuotacustomAfrica => write!(f, "wireless-data-quotacustom-africa"),
            Self::WirelessDataQuotacustomAsia => write!(f, "wireless-data-quotacustom-asia"),
            Self::WirelessDataQuotacustomCentralandsouthamerica => {
                write!(f, "wireless-data-quotacustom-centralandsouthamerica")
            }
            Self::WirelessDataQuotacustomEurope => write!(f, "wireless-data-quotacustom-europe"),
            Self::WirelessDataQuotacustomNorthamerica => {
                write!(f, "wireless-data-quotacustom-northamerica")
            }
            Self::WirelessDataQuotacustomOceania => write!(f, "wireless-data-quotacustom-oceania"),
            Self::WirelessMrcPayg => write!(f, "wireless-mrc-payg"),
            Self::WirelessMrcQuota1 => write!(f, "wireless-mrc-quota1"),
            Self::WirelessMrcQuota10 => write!(f, "wireless-mrc-quota10"),
            Self::WirelessMrcQuota50 => write!(f, "wireless-mrc-quota50"),
            Self::WirelessMrcQuotacustom => write!(f, "wireless-mrc-quotacustom"),
            Self::WirelessOrders => write!(f, "wireless-orders"),
            Self::WirelessOrdersArtwork => write!(f, "wireless-orders-artwork"),
            Self::WirelessOrdersBulk => write!(f, "wireless-orders-bulk"),
            Self::WirelessOrdersEsim => write!(f, "wireless-orders-esim"),
            Self::WirelessOrdersStarter => write!(f, "wireless-orders-starter"),
            Self::WirelessQuotas => write!(f, "wireless-quotas"),
            Self::WirelessSmsAfrica => write!(f, "wireless-sms-africa"),
            Self::WirelessSmsAsia => write!(f, "wireless-sms-asia"),
            Self::WirelessSmsCentralandsouthamerica => {
                write!(f, "wireless-sms-centralandsouthamerica")
            }
            Self::WirelessSmsEurope => write!(f, "wireless-sms-europe"),
            Self::WirelessSmsNorthamerica => write!(f, "wireless-sms-northamerica"),
            Self::WirelessSmsOceania => write!(f, "wireless-sms-oceania"),
            Self::WirelessSuperSim => write!(f, "wireless-super-sim"),
            Self::WirelessSuperSimData => write!(f, "wireless-super-sim-data"),
            Self::WirelessSuperSimDataNorthAmericaUsa => {
                write!(f, "wireless-super-sim-data-north-america-usa")
            }
            Self::WirelessSuperSimDataPayg => write!(f, "wireless-super-sim-data-payg"),
            Self::WirelessSuperSimDataPaygEurope => {
                write!(f, "wireless-super-sim-data-payg-europe")
            }
            Self::WirelessSuperSimDataPaygNorthAmerica => {
                write!(f, "wireless-super-sim-data-payg-north-america")
            }
            Self::WirelessSuperSimHardware => write!(f, "wireless-super-sim-hardware"),
            Self::WirelessSuperSimHardwareBulk => write!(f, "wireless-super-sim-hardware-bulk"),
            Self::WirelessSuperSimSmscommands => write!(f, "wireless-super-sim-smscommands"),
            Self::WirelessSuperSimSmscommandsAfrica => {
                write!(f, "wireless-super-sim-smscommands-africa")
            }
            Self::WirelessSuperSimSmscommandsAsia => {
                write!(f, "wireless-super-sim-smscommands-asia")
            }
            Self::WirelessSuperSimSmscommandsCentAndSouthAmerica => {
                write!(f, "wireless-super-sim-smscommands-cent-and-south-america")
            }
            Self::WirelessSuperSimSmscommandsEurope => {
                write!(f, "wireless-super-sim-smscommands-europe")
            }
            Self::WirelessSuperSimSmscommandsNorthAmerica => {
                write!(f, "wireless-super-sim-smscommands-north-america")
            }
            Self::WirelessSuperSimSmscommandsOceania => {
                write!(f, "wireless-super-sim-smscommands-oceania")
            }
            Self::WirelessSuperSimSubscription => write!(f, "wireless-super-sim-subscription"),
            Self::WirelessSuperSimSubscriptionPayg => {
                write!(f, "wireless-super-sim-subscription-payg")
            }
            Self::WirelessUsage => write!(f, "wireless-usage"),
            Self::WirelessUsageCommands => write!(f, "wireless-usage-commands"),
            Self::WirelessUsageCommandsAfrica => write!(f, "wireless-usage-commands-africa"),
            Self::WirelessUsageCommandsAsia => write!(f, "wireless-usage-commands-asia"),
            Self::WirelessUsageCommandsCentralandsouthamerica => {
                write!(f, "wireless-usage-commands-centralandsouthamerica")
            }
            Self::WirelessUsageCommandsEurope => write!(f, "wireless-usage-commands-europe"),
            Self::WirelessUsageCommandsHome => write!(f, "wireless-usage-commands-home"),
            Self::WirelessUsageCommandsNorthamerica => {
                write!(f, "wireless-usage-commands-northamerica")
            }
            Self::WirelessUsageCommandsOceania => write!(f, "wireless-usage-commands-oceania"),
            Self::WirelessUsageCommandsRoaming => write!(f, "wireless-usage-commands-roaming"),
            Self::WirelessUsageData => write!(f, "wireless-usage-data"),
            Self::WirelessUsageDataAfrica => write!(f, "wireless-usage-data-africa"),
            Self::WirelessUsageDataAsia => write!(f, "wireless-usage-data-asia"),
            Self::WirelessUsageDataCentralandsouthamerica => {
                write!(f, "wireless-usage-data-centralandsouthamerica")
            }
            Self::WirelessUsageDataCustomAdditionalmb => {
                write!(f, "wireless-usage-data-custom-additionalmb")
            }
            Self::WirelessUsageDataCustomFirst5mb => {
                write!(f, "wireless-usage-data-custom-first5mb")
            }
            Self::WirelessUsageDataDomesticRoaming => {
                write!(f, "wireless-usage-data-domestic-roaming")
            }
            Self::WirelessUsageDataEurope => write!(f, "wireless-usage-data-europe"),
            Self::WirelessUsageDataIndividualAdditionalgb => {
                write!(f, "wireless-usage-data-individual-additionalgb")
            }
            Self::WirelessUsageDataIndividualFirstgb => {
                write!(f, "wireless-usage-data-individual-firstgb")
            }
            Self::WirelessUsageDataInternationalRoamingCanada => {
                write!(f, "wireless-usage-data-international-roaming-canada")
            }
            Self::WirelessUsageDataInternationalRoamingIndia => {
                write!(f, "wireless-usage-data-international-roaming-india")
            }
            Self::WirelessUsageDataInternationalRoamingMexico => {
                write!(f, "wireless-usage-data-international-roaming-mexico")
            }
            Self::WirelessUsageDataNorthamerica => write!(f, "wireless-usage-data-northamerica"),
            Self::WirelessUsageDataOceania => write!(f, "wireless-usage-data-oceania"),
            Self::WirelessUsageDataPooled => write!(f, "wireless-usage-data-pooled"),
            Self::WirelessUsageDataPooledDownlink => {
                write!(f, "wireless-usage-data-pooled-downlink")
            }
            Self::WirelessUsageDataPooledUplink => write!(f, "wireless-usage-data-pooled-uplink"),
            Self::WirelessUsageMrc => write!(f, "wireless-usage-mrc"),
            Self::WirelessUsageMrcCustom => write!(f, "wireless-usage-mrc-custom"),
            Self::WirelessUsageMrcIndividual => write!(f, "wireless-usage-mrc-individual"),
            Self::WirelessUsageMrcPooled => write!(f, "wireless-usage-mrc-pooled"),
            Self::WirelessUsageMrcSuspended => write!(f, "wireless-usage-mrc-suspended"),
            Self::WirelessUsageSms => write!(f, "wireless-usage-sms"),
            Self::WirelessUsageVoice => write!(f, "wireless-usage-voice"),
            Self::A2pFastTrackOnboarding => write!(f, "a2p-fast-track-onboarding"),
            Self::AdvisoryServices => write!(f, "advisory-services"),
            Self::AdvisoryServicesBilled => write!(f, "advisory-services-billed"),
            Self::AdvisoryServicesCallTracking => write!(f, "advisory-services-call-tracking"),
            Self::AdvisoryServicesDataServices => write!(f, "advisory-services-data-services"),
            Self::AdvisoryServicesExpenses => write!(f, "advisory-services-expenses"),
            Self::AdvisoryServicesSipTrunking => write!(f, "advisory-services-sip-trunking"),
            Self::AssetsRequests => write!(f, "assets-requests"),
            Self::AudienceMinutesVideo => write!(f, "audience-minutes-video"),
            Self::AuthyBucketAdjustment => write!(f, "authy-bucket-adjustment"),
            Self::AuthySoftware => write!(f, "authy-software"),
            Self::CalleridlookupsApi => write!(f, "calleridlookups-api"),
            Self::CalleridlookupsProgrammablevoice => {
                write!(f, "calleridlookups-programmablevoice")
            }
            Self::CalleridlookupsTrunking => write!(f, "calleridlookups-trunking"),
            Self::CallsTrunkingInboundTollfreeLocal => {
                write!(f, "calls-trunking-inbound-tollfree-local")
            }
            Self::CallsTrunkingInboundTollfreeMobile => {
                write!(f, "calls-trunking-inbound-tollfree-mobile")
            }
            Self::ChannelsWhatsappConversationFree1 => {
                write!(f, "channels-whatsapp-conversation-free-1")
            }
            Self::Conference => write!(f, "conference"),
            Self::ConversationalInsights => write!(f, "conversational-insights"),
            Self::ConversationalInsightsMessages => write!(f, "conversational-insights-messages"),
            Self::ConversationalInsightsVoiceMinutes => {
                write!(f, "conversational-insights-voice-minutes")
            }
            Self::Demo => write!(f, "demo"),
            Self::DemoUcScriptTest => write!(f, "demo-uc-script-test"),
            Self::ElasticSipTrunking => write!(f, "elastic-sip-trunking"),
            Self::ElasticSipTrunkingCallTransfers => {
                write!(f, "elastic-sip-trunking-call-transfers")
            }
            Self::EnterpriseHippa => write!(f, "enterprise-hippa"),
            Self::FlexNamedUsers => write!(f, "flex-named-users"),
            Self::FlexSpinsci => write!(f, "flex-spinsci"),
            Self::FlexUsers1 => write!(f, "flex-users-1"),
            Self::FlexWfoPremiumSpeechAnalytics => write!(f, "flex-wfo-premium-speech-analytics"),
            Self::FlexXcelerate => write!(f, "flex-xcelerate"),
            Self::FunctionsRollup => write!(f, "functions-rollup"),
            Self::ImpV1Usage => write!(f, "imp-v1-usage"),
            Self::IpMessagingAddons => write!(f, "ip-messaging-addons"),
            Self::Ivr => write!(f, "ivr"),
            Self::IvrConversational => write!(f, "ivr-conversational"),
            Self::IvrDtmf => write!(f, "ivr-dtmf"),
            Self::IvrVirtualagent => write!(f, "ivr-virtualagent"),
            Self::Live => write!(f, "live"),
            Self::LiveMediaRecordingMinutes => write!(f, "live-media-recording-minutes"),
            Self::LongcodeMps => write!(f, "longcode-mps"),
            Self::MarketplaceAnalyticsAddons => write!(f, "marketplace-analytics-addons"),
            Self::MarketplaceIsvAddons => write!(f, "marketplace-isv-addons"),
            Self::MarketplaceMessagingAddons => write!(f, "marketplace-messaging-addons"),
            Self::MarketplacePhonenumbersAddons => write!(f, "marketplace-phonenumbers-addons"),
            Self::MarketplaceRecordingAddons => write!(f, "marketplace-recording-addons"),
            Self::MarketplaceVirtualagentAddons => write!(f, "marketplace-virtualagent-addons"),
            Self::MarketplayPayAddonsShuttlePayConnector1 => {
                write!(f, "marketplay-pay-addons-shuttle-pay-connector-1")
            }
            Self::MarketplayPayAddonsStripePayConnector => {
                write!(f, "marketplay-pay-addons-stripe-pay-connector")
            }
            Self::MmsInboundLongcodeCanada => write!(f, "mms-inbound-longcode-canada"),
            Self::MmsInboundLongcodeUnitedstates => write!(f, "mms-inbound-longcode-unitedstates"),
            Self::MmsOutboundLongcodeCanada => write!(f, "mms-outbound-longcode-canada"),
            Self::MmsOutboundLongcodeUnitedstates => {
                write!(f, "mms-outbound-longcode-unitedstates")
            }
            Self::MmsOutboundTollFree => write!(f, "mms-outbound-toll-free"),
            Self::NotifyChatappsandotherchannels => write!(f, "notify-chatappsandotherchannels"),
            Self::NotifyNotifyservices => write!(f, "notify-notifyservices"),
            Self::NotifyPushnotifications => write!(f, "notify-pushnotifications"),
            Self::PaymentGatewayConnectors => write!(f, "payment-gateway-connectors"),
            Self::PaymentSolutions => write!(f, "payment-solutions"),
            Self::PchatBucketAdjustment => write!(f, "pchat-bucket-adjustment"),
            Self::PhonenumbersNumbers => write!(f, "phonenumbers-numbers"),
            Self::ProgVoiceClientAndroid => write!(f, "prog-voice-client-android"),
            Self::ProgVoiceClientAndroidInbound => write!(f, "prog-voice-client-android-inbound"),
            Self::ProgVoiceClientAndroidOutbound => write!(f, "prog-voice-client-android-outbound"),
            Self::ProgVoiceClientIos => write!(f, "prog-voice-client-ios"),
            Self::ProgVoiceClientIosInbound => write!(f, "prog-voice-client-ios-inbound"),
            Self::ProgVoiceClientIosOutbound => write!(f, "prog-voice-client-ios-outbound"),
            Self::ProgVoiceClientSdk => write!(f, "prog-voice-client-sdk"),
            Self::ProgVoiceClientWeb => write!(f, "prog-voice-client-web"),
            Self::ProgVoiceClientWebInbound => write!(f, "prog-voice-client-web-inbound"),
            Self::ProgVoiceClientWebOutbound => write!(f, "prog-voice-client-web-outbound"),
            Self::ProgrammablevoiceconnectivityMediaStreams => {
                write!(f, "programmablevoiceconnectivity-media-streams")
            }
            Self::PstnconnectivityByoc => write!(f, "pstnconnectivity-byoc"),
            Self::PstnconnectivityEmergency => write!(f, "pstnconnectivity-emergency"),
            Self::PstnconnectivityMinutes => write!(f, "pstnconnectivity-minutes"),
            Self::PstnconnectivityMinutes1 => write!(f, "pstnconnectivity-minutes-1"),
            Self::PstnconnectivityMinutesinboundlocal => {
                write!(f, "pstnconnectivity-minutesinboundlocal")
            }
            Self::PstnconnectivityMinutesinboundmobile => {
                write!(f, "pstnconnectivity-minutesinboundmobile")
            }
            Self::PstnconnectivityMinutesinboundtollfree => {
                write!(f, "pstnconnectivity-minutesinboundtollfree")
            }
            Self::PstnconnectivityMinutesinboundtollfreelocal => {
                write!(f, "pstnconnectivity-minutesinboundtollfreelocal")
            }
            Self::PstnconnectivityMinutesinboundtollfreemobile => {
                write!(f, "pstnconnectivity-minutesinboundtollfreemobile")
            }
            Self::PvRoomHours => write!(f, "pv-room-hours"),
            Self::PvRoomSimultaneousParticipantConnections => {
                write!(f, "pv-room-simultaneous-participant-connections")
            }
            Self::PvideoRoomHoursAu1 => write!(f, "pvideo-room-hours-au1"),
            Self::PvideoRoomHoursBr1 => write!(f, "pvideo-room-hours-br1"),
            Self::PvideoRoomHoursIe1 => write!(f, "pvideo-room-hours-ie1"),
            Self::PvideoRoomHoursJp1 => write!(f, "pvideo-room-hours-jp1"),
            Self::PvideoRoomHoursSg1 => write!(f, "pvideo-room-hours-sg1"),
            Self::PvideoRoomHoursUs1 => write!(f, "pvideo-room-hours-us1"),
            Self::PvideoRoomHoursUs2 => write!(f, "pvideo-room-hours-us2"),
            Self::RecordingsEncrypted => write!(f, "recordings-encrypted"),
            Self::ShortCodeSetupFees => write!(f, "short-code-setup-fees"),
            Self::ShortcodesMessagesInbound => write!(f, "shortcodes-messages-inbound"),
            Self::ShortcodesMessagesOutbound => write!(f, "shortcodes-messages-outbound"),
            Self::SmsMessagesRegistrationfees => write!(f, "sms-messages-registrationfees"),
            Self::SmsMmsPenaltyFees => write!(f, "sms-mms-penalty-fees"),
            Self::SmsMmsPenaltyFees1 => write!(f, "sms-mms-penalty-fees-1"),
            Self::SmsPumpingProtectionNonUsca => write!(f, "sms-pumping-protection-non-usca"),
            Self::SmsPumpingProtectionUsca => write!(f, "sms-pumping-protection-usca"),
            Self::Studio => write!(f, "studio"),
            Self::StudioMonthlyFees => write!(f, "studio-monthly-fees"),
            Self::Supersim => write!(f, "supersim"),
            Self::TaskRouter => write!(f, "task-router"),
            Self::TaskRouterWorkers => write!(f, "task-router-workers"),
            Self::TestQuotaBuckets => write!(f, "test-quota-buckets"),
            Self::TestUcScript1 => write!(f, "test-uc-script-1"),
            Self::TestUcScriptDemo2 => write!(f, "test-uc-script-demo-2"),
            Self::TextToSpeech => write!(f, "text-to-speech"),
            Self::Tme => write!(f, "tme"),
            Self::TtsBasic => write!(f, "tts-basic"),
            Self::TwilioEditions => write!(f, "twilio-editions"),
            Self::TwilioInterconnectCalifornia => write!(f, "twilio-interconnect-california"),
            Self::TwilioInterconnectCaliforniaMonthly => {
                write!(f, "twilio-interconnect-california-monthly")
            }
            Self::TwilioInterconnectCaliforniaSetup => {
                write!(f, "twilio-interconnect-california-setup")
            }
            Self::TwilioInterconnectFrankfurt => write!(f, "twilio-interconnect-frankfurt"),
            Self::TwilioInterconnectFrankfurtMo => write!(f, "twilio-interconnect-frankfurt-mo"),
            Self::TwilioInterconnectFrankfurtSetup => {
                write!(f, "twilio-interconnect-frankfurt-setup")
            }
            Self::TwilioInterconnectLondon => write!(f, "twilio-interconnect-london"),
            Self::TwilioInterconnectLondonMo => write!(f, "twilio-interconnect-london-mo"),
            Self::TwilioInterconnectLondonSetup => write!(f, "twilio-interconnect-london-setup"),
            Self::TwilioInterconnectSaoPaulo => write!(f, "twilio-interconnect-sao-paulo"),
            Self::TwilioInterconnectSaoPauloMonthly => {
                write!(f, "twilio-interconnect-sao-paulo-monthly")
            }
            Self::TwilioInterconnectSaoPauloSetup => {
                write!(f, "twilio-interconnect-sao-paulo-setup")
            }
            Self::TwilioInterconnectSingapore => write!(f, "twilio-interconnect-singapore"),
            Self::TwilioInterconnectSingaporeMo => write!(f, "twilio-interconnect-singapore-mo"),
            Self::TwilioInterconnectSingaporeSetup => {
                write!(f, "twilio-interconnect-singapore-setup")
            }
            Self::TwilioInterconnectSydney => write!(f, "twilio-interconnect-sydney"),
            Self::TwilioInterconnectSydneyMo => write!(f, "twilio-interconnect-sydney-mo"),
            Self::TwilioInterconnectSydneySetup => write!(f, "twilio-interconnect-sydney-setup"),
            Self::TwilioInterconnectTokyo => write!(f, "twilio-interconnect-tokyo"),
            Self::TwilioInterconnectTokyoMo => write!(f, "twilio-interconnect-tokyo-mo"),
            Self::TwilioInterconnectTokyoSetup => write!(f, "twilio-interconnect-tokyo-setup"),
            Self::TwilioInterconnectVa => write!(f, "twilio-interconnect-va"),
            Self::TwilioInterconnectVaMo => write!(f, "twilio-interconnect-va-mo"),
            Self::TwilioInterconnectVaSetup => write!(f, "twilio-interconnect-va-setup"),
            Self::TwimlVerbs => write!(f, "twiml-verbs"),
            Self::TwimlVerbsSay => write!(f, "twiml-verbs-say"),
            Self::UsageProgrammableMessagingEngagementSuite => {
                write!(f, "usage-programmable-messaging-engagement-suite")
            }
            Self::UsageProgrammableMessagingFeesServices => {
                write!(f, "usage-programmable-messaging-fees-services")
            }
            Self::VerifyOutboundEmail => write!(f, "verify-outbound-email"),
            Self::VerifyPackagedPlans => write!(f, "verify-packaged-plans"),
            Self::VerifySilentNetworkAuth => write!(f, "verify-silent-network-auth"),
            Self::VerifyVoiceAndSms => write!(f, "verify-voice-and-sms"),
            Self::VoiceInsightsClientInsightsMonthyCommit => {
                write!(f, "voice-insights-client-insights-monthy-commit")
            }
            Self::WirelessDataPaygAsiaAfg => write!(f, "wireless-data-payg-asia-afg"),
            Self::WirelessMultiImsiSimCommands => write!(f, "wireless-multi-imsi-sim-commands"),
            Self::WirelessMultiImsiSimCommandsUsa => {
                write!(f, "wireless-multi-imsi-sim-commands-usa")
            }
            Self::WirelessMultiImsiSimData => write!(f, "wireless-multi-imsi-sim-data"),
            Self::WirelessMultiImsiSimDataEu28 => write!(f, "wireless-multi-imsi-sim-data-eu28"),
            Self::WirelessMultiImsiSimDataUsa => write!(f, "wireless-multi-imsi-sim-data-usa"),
            Self::WirelessMultiImsiSimMonthlyFees => {
                write!(f, "wireless-multi-imsi-sim-monthly-fees")
            }
            Self::WirelessMultiImsiSimUsage => write!(f, "wireless-multi-imsi-sim-usage"),
            Self::WirelessSuperSimDataNorthAmerica => {
                write!(f, "wireless-super-sim-data-north-america")
            }
            Self::WirelessSuperSimUsage => write!(f, "wireless-super-sim-usage"),
        }
    }
}

impl Default for UsageRecordTodayEnumCategory {
    fn default() -> UsageRecordTodayEnumCategory {
        Self::A2p10dlcRegistrationfeesBrandregistration
    }
}
